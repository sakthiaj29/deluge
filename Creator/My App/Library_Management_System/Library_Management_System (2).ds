/*
 * Author       : syngridss
 * Generated on : 21-Jul-2025 12:07:39
 * Version      : 1.0
 */
 application "Library Management System"
 {
 	date format = "dd-MMM-yyyy"
 	time zone = "Asia/Calcutta"
 	time format = "24-hr"
 	forms
	{
		form Book
		{
			success message = "Book Added Successfully"
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Title
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
			Author
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
			Publisher
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
			Publication_Date
			(
    			type = date
				displayname = "Publication Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Isbn
			(
				type = number
				maxchar = 19
	 			row = 1
	 			column = 1   
				width = medium
			)
			Category
			(
				type = picklist
				values = {"Non-fiction","Technology","Biography","Science","History","Fiction"}
				others option = true
	 			row = 1
	 			column = 1   
				width = medium
			)
			Language1
			(
				type = picklist
				displayname = "Language"
				maxchar = 100
				values = {"Tamil","English","French"}
				initial value = "English"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Book_Section
			(
				type = picklist
				displayname = "Book Section"
				maxchar = 100
				values = {"Mathematics","Circulation","Computer Science","Reference","Technical Processing","Digital Library","Periodical Section","Religion and History","Other"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Available_Copy
			(
				type = checkboxes	
				displayname = "Available Copy"
				values = {"Hard Copy","Soft Copy"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Hard_Copy_Total_Quantity
			(
				type = number
				displayname = "Hard Copy Total Quantity"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Hard_Copy_Current_Quantity
			(
				type = number
				displayname = "Hard Copy Current Quantity"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Soft_Copy_Total_Quantity
			(
				type = number
				displayname = "Soft Copy Total Quantity"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Soft_Copy_Current_Quantity
			(
				type = number
				displayname = "Soft Copy Current Quantity"
				maxchar = 19
	 			row = 1
	 			column = 1   
				width = medium
			)
			Price
			(
				type = USD
	 			row = 1
	 			column = 1   
				width = medium
			)
			Rac_Number
			(
    			type = text
				displayname = "Rac Number"
	 			row = 1
	 			column = 1   
				width = medium
			)
			E_Copy
			(
    			type = upload file
				displayname = "E Copy"
				browse = local_drive
	 			row = 1
	 			column = 1   
				width = medium
			)
			Image
			(
    			type = image
				source  = file
				enable = title
				aspect ratio = original
				camera = primary
				show gallery = true
				switch camera = true
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Borrow_Request
		{
			displayname = "Borrow Request"
			success message = "Borrow Request Added Successfully"
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Borrow_Request_Id
			(
    			type = autonumber
				displayname = "Borrow Request Id"
				start index = 1
	 			row = 1
	 			column = 1   
				width = medium
			)
			User
			(
				type = picklist	
				values  = User.ID
    			displayformat = [Name.first_name]
				allow new entries
				[
					displayname = "Add New"
				]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Book
			(
				type = picklist	
				values  = Book.ID
    			displayformat = [Title + " - " + Author]
				allow new entries
				[
					displayname = "Add New"
				]
	 			row = 1
	 			column = 1   
				width = medium
			)
			Request_Date
			(
    			type = date
				displayname = "Request Date"
				initial value = "${zoho.currentdate}"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Return_Date
			(
    			type = date
				displayname = "Return Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Book_Type
			(
				type = radiobuttons
				displayname = "Book Type"
				maxchar = 100
				values = {"Hard Copy","Soft Copy"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Status
			(
				type = picklist
				maxchar = 100
				values = {"Pending","Approved","Denied"}
				initial value = "Pending"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Notes
			(
    			type = textarea
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Borrowed_Book
		{
			displayname = "Borrowed Book"
			success message = "Book Added Successfully"
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			User
			(
				type = picklist	
				values  = User.ID
    			displayformat = [" " + Name.first_name + " " + Name.last_name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Book
			(
				type = picklist	
				values  = Book.ID
    			displayformat = [Title + " - " + Author]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Book_Copy
			(
    			type = upload file
				displayname = "Book Copy"
				browse = local_drive
	 			row = 1
	 			column = 1   
				width = medium
			)
			Borrowed_Date
			(
    			type = date
				displayname = "Borrowed Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Return_Date
			(
    			type = date
				displayname = "Return Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Renewal_Date
			(
    			type = date
				displayname = "Renewal Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Book_Type
			(
				type = picklist
				displayname = "Book Type"
				maxchar = 100
				values = {"Hard Copy","Soft Copy"}
				initial value = "Soft Copy"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Status
			(
				type = picklist
				maxchar = 100
				values = {"Borrowed","Returned","Renewal Request","Renewal Approved","Renewal Denied"}
				initial value = "Borrowed"
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Library_Details
		{
			displayname = "Library Details"
			success message = "Library Detail Added Successfully"
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Library_Name
			(
    			type = text
				displayname = "Library Name"
	 			row = 1
	 			column = 1   
				width = medium
				personal data = true
			)
			must have Email
			(
    			type = email
				maxchar = 80
	 			row = 1
	 			column = 1   
				width = medium
				personal data = true
				isephi = true
			)
			must have Phone_Number
			(
    			type = phonenumber
				displayname = "Phone"
	 			row = 1
	 			column = 1   
				width = medium
				personal data = true
			)
			must have Address
			(
    			type = address
     			capture_coordinates = true
     			adjust_using_map = false
     			address_line_1
     			(
	     			  type = address_line_1
	     			  displayname = "Address Line 1"
     			) 
     			address_line_2
     			(
	     			  type = address_line_2
	     			  displayname = "Address Line 2"
     			) 
     			district_city
     			(
	     			  type = district_city
	     			  displayname = "City / District"
     			) 
     			state_province
     			(
	     			  type = state_province
	     			  displayname = "State / Province"
     			) 
     			postal_Code
     			(
	     			  type = postal_Code
	     			  displayname = "Postal Code"
     			) 
     			country
     			(
	     			  type = country
	     			  displayname = "Country"
     			) 
     			latitude
     			(
	     			  type = latitude
	     			  displayname = "latitude"
	     			 visibility = false
     			) 
     			longitude
     			(
	     			  type = longitude
	     			  displayname = "longitude"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
				personal data = true
			)
			Website
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		properties
		{
			total entries
			{
				allowed count = 1
			}
		}
		}
		form Reason
		{
			store data in zc = false
			success message = ""
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Rec_Id
			(
				type = number
				displayname = "Rec Id"
				maxchar = 19
	 			row = 1
	 			column = 1   
				width = medium
			)
			Status
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
			Reason
			(
    			type = textarea
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			actions
			{
				Submit
				(
   					type = submit
   					displayname = "Submit"
				)
				Reset
				(
   					type = reset
   					displayname = "Reset"
				)
				Cancel
				(
   					type = button
   					displayname = "Cancel"
				)
			}
		}
		form Reminder
		{
			success message = "Reminder Added Successfully"
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Borrow_Request
			(
				type = picklist	
				displayname = "Borrow Request"
				values  = Borrow_Request.ID
    			displayformat = [Borrow_Request_Id]
				allow new entries
				[
					displayname = "Add New"
				]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Reminder_Date
			(
    			type = datetime
				displayname = "Reminder Date"
				timedisplayoptions = "hh:mm:ss"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Return_Book
		{
			displayname = "Return Book"
			success message = "Return Book Added Successfully"
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			User
			(
				type = picklist	
				values  = User.ID
    			displayformat = [" " + Name.prefix + " " + Name.first_name + " " + Name.last_name + " " + Name.suffix]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Book
			(
				type = picklist	
				values  = Book.ID
    			displayformat = [Author]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Rec_Id
			(
				type = number
				displayname = "Rec Id"
				maxchar = 19
	 			row = 1
	 			column = 1   
				width = medium
			)
			Book_Type
			(
    			type = text
				displayname = "Book Type"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Return_Date
			(
    			type = date
				displayname = "Return Date"
				initial value = "${zoho.currentdate}"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					Reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Return_Books
		{
			displayname = "Return Books"
			store data in zc = false
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			User
			(
				type = picklist	
				values  = User.ID
    			displayformat = [" " + Name.first_name + " - " + Email]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Book
			(
				type = list	
				values  = Book[ID == 0].ID
    			displayformat = [Title + " - " + Author]
				sortorder = ascending
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
			Rec_Id
			(
				type = number
				displayname = "Rec Id"
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			actions
			{
				Submit
				(
   					type = submit
   					displayname = "Submit"
				)
				Reset
				(
   					type = reset
   					displayname = "Reset"
				)
			}
		}
		form User
		{
			success message = "User Added Successfully"
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Name
			(
    			type = name
     			prefix
     			(
	     			 type = prefix
	     			 displayname ="Prefix"
	     			 visibility = false
	     			 value = {"Mr.","Mrs.","Ms."}
     			) 
     			first_name
     			(
	     			 type = first_name
	     			 displayname ="First Name"
     			) 
     			last_name
     			(
	     			 type = last_name
	     			 displayname ="Last Name"
	     			 visibility = false
     			) 
     			suffix
     			(
	     			 type = suffix
	     			 displayname ="Suffix"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
			)
			Email
			(
    			type = email
	 			row = 1
	 			column = 1   
				width = medium
			)
			Phone_Number
			(
    			type = phonenumber
				displayname = "Phone Number"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Address
			(
    			type = address
     			capture_coordinates = true
     			adjust_using_map = false
     			address_line_1
     			(
	     			  type = address_line_1
	     			  displayname = "Address Line 1"
     			) 
     			address_line_2
     			(
	     			  type = address_line_2
	     			  displayname = "Address Line 2"
	     			 visibility = false
     			) 
     			district_city
     			(
	     			  type = district_city
	     			  displayname = "City / District"
     			) 
     			state_province
     			(
	     			  type = state_province
	     			  displayname = "State / Province"
     			) 
     			postal_Code
     			(
	     			  type = postal_Code
	     			  displayname = "Postal Code"
     			) 
     			country
     			(
	     			  type = country
	     			  displayname = "Country"
     			) 
     			latitude
     			(
	     			  type = latitude
	     			  displayname = "Latitude"
	     			 visibility = false
     			) 
     			longitude
     			(
	     			  type = longitude
	     			  displayname = "Longitude"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
			)
			Membership_Type
			(
				type = picklist
				displayname = "Membership Type"
				maxchar = 100
				values = {"Ordinary Membership","Elite Membership"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Max_Book_Allowed
			(
				type = number
				displayname = "Max Book Allowed"
				initial value = 0
	 			row = 1
	 			column = 1   
				width = medium
			)
			Current_Books_Count
			(
				type = number
				displayname = "Current Books Count"
				initial value = 0
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	reports
	{
		list Borrow_Request_Report
		{
			displayName = "All Borrow Requests"
			show all rows from Borrow_Request    
			(
				Borrow_Request_Id as "Borrow Request Id"
				User
				Book
				Request_Date as "Request Date"
				Return_Date as "Return Date"
				Status
				Book_Type as "Book Type"
				Book.Language1 as "Language"
				Book.Added_Time as "Added Time"
			)
			conditional formatting
			(
				"Status Approved"
				{
				condition = (Status == "Approved")
				fields = [Status]
				format = "font-weight:bold;color:#4ea64c;"
				}
				"Status Denied"
				{
				condition = (Status == "Denied")
				fields = [Status]
				format = "font-weight:bold;color:#8b083e;background-color:#ffffff;"
				}
				"Status Pending"
				{
				condition = (Status == "Pending")
				fields = [Status]
				format = "font-weight:bold;color:#16d0ef;"
				}
			)
			customlayouts
			(
				template
	 			(
	 	  			displayname="Custom Layout 1"
	 	  			content="<panel  \n >\n	<pr \n			width='fill'\n		height='fill'\n>\n	<pc \n		padding = '17px'\n	bgColor = '#FFFFFF'\n\n		width = '100%'\n		hAlign = 'center'\n		vAlign = 'middle'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	\n</pc>\n</pr>\n</pc>\n</pr>\n</panel>"
	    		)
			)
		}
		list User_Report
		{
			displayName = "All Users"
			show all rows from User    
			(
				Name 
	 			(
	      			displayformat = [first_name+""+prefix+""+last_name+""+suffix]
	 			)
				Email
				Phone_Number as "Phone Number"
				Address 
	 			(
	      			displayformat = [address_line_1+""+address_line_2+""+district_city+""+state_province+""+postal_Code+""+country]
	      			enable = Link_to_Map,Show_As_Text
	 			)
				ID
				Current_Books_Count as "Current Books Count"
			)
		}
		map User_Address
		{
			displayName = "Addresses"
			show all rows from User    
			(
				Name 
	 			(
	      			displayformat = [first_name+""+prefix+""+last_name+""+suffix]
	 			)
				Email
				Phone_Number as "Phone Number"
				Address 
	 			(
	      			displayformat = [address_line_1+""+address_line_2+""+district_city+""+state_province+""+postal_Code+""+country]
	      			enable = Link_to_Map,Show_As_Text
	 			)
			)
			options
			(
	 			display field = Address
	 	 		radius = 10000 Miles
	 		)
		}
		list Reminder_Report
		{
			displayName = "All Reminders"
			show all rows from Reminder    
			(
				Borrow_Request as "Borrow Request"
				Reminder_Date as "Reminder Date"
			)
		}
		list Book_Report
		{
			displayName = "All Books"
			show all rows from Book    
			(
				Title
				Author
				Publisher
				Isbn
				Category
				Soft_Copy_Current_Quantity as "Soft Copy Current Quantity"
				Price
				(
					display = total,average,min,max	
				)
				Available_Copy as "Available Copy"
				Hard_Copy_Current_Quantity as "Hard Copy Current Quantity"
				Hard_Copy_Total_Quantity as "Hard Copy Total Quantity"
				Soft_Copy_Total_Quantity as "Soft Copy Total Quantity"
				Image
				Book_Section as "Book Section"
				Language1 as "Language"
				Rac_Number as "Rac Number"
			)
		}
		kanban Book_by_Category
		{
			displayName = "Categories"
			show all rows from Book    
			(
				Title
				Author
				Publisher
				Isbn
				Category
				Soft_Copy_Current_Quantity as "Soft Copy Current Quantity"
				Price
				(
					display = total,average,min,max	
				)
			)
			options
			(
	 			display field = Category
	 		)
		}
		default list My_Borrowed_Books
		{
			displayName = "My Borrowed Books"
			show all rows from Borrowed_Book    
			(
				User
				Book
				Book_Copy as "Book Copy"
				Borrowed_Date as "Borrowed Date"
				Return_Date as "Return Date"
				custom action "Return Book"
				(
	  			workflow = Return_Book
				show action in edit record menu = true
				column header = "Return Book"
				condition = (Status != "Returned")
				)
				Status
				Book_Type as "Book Type"
				custom action "Book Renew"
				(
	  			workflow = On_Book_Renew
				show action in edit record menu = true
				column header = "Book Renew"
				condition = (Status == "Borrowed" || Status == "Renewal Request" || Status == "Renewal Approved")
				confirmation before execution
				(
					message for individual record = "Are you Renew the Book  ${Book.Title} ?"
					confirm button text = "Yes"		
					cancel button text = "No"
				)
				)
				Book.Title
				Renewal_Date as "Renewal Date"
			)
		}
		list Borrow_Request_Approval
		{
			displayName = "Borrow Request Approval"
			show all rows from Borrow_Request    
			(
				Borrow_Request_Id as "Borrow Request Id"
				User
				Book
				Request_Date as "Request Date"
				Return_Date as "Return Date"
				custom action "Approve"
				(
	  			workflow = Approve_Process
				show action in edit record menu = true
				column header = "Approve"
				condition = (Status == "Pending")
				confirmation before execution
				(
					message for individual record = "\"Do you Approve the book ${Book.Title} by ${Book.Author} for ${User.Name} ?"
					confirm button text = "Yes"		
					cancel button text = "No"
				)
				)
				custom action "Deny"
				(
	  			workflow = Deny_Process
				show action in edit record menu = true
				column header = "Deny"
				condition = (Status == "Pending")
				confirmation before execution
				(
					message for individual record = "\"Do you Deny the book ${Book.Title} by ${Book.Author} for ${User.Name} ?"
					confirm button text = "Yes"		
					cancel button text = "No"
				)
				)
				Book_Type as "Book Type"
				custom action "View User Borrowed Books"
				(
	  			workflow = Open_Users_Borrowed_Book_
				show action in edit record menu = true
				column header = "View User Borrowed Books"
				)
				Status
				Book.Title
				Book.Author
				User.Name 
	 			(
	      			displayformat = [first_name+""+prefix+""+last_name+""+suffix]
	 			)
			)
			conditional formatting
			(
				"New Formatting"
				{
				condition = (Status == "Pending")
				fields = [Status]
				format = "font-weight:bold;color:#ffffff;background-color:#3598db;"
				}
				"Status Approved"
				{
				condition = (Status == "Approved")
				fields = [Status]
				format = "font-weight:bold;color:#4ea64c;"
				}
				"Status Denied"
				{
				condition = (Status == "Denied")
				fields = [Status]
				format = "font-weight:bold;color:#8b083e;"
				}
			)
		}
		default list All_Return_Books
		{
			displayName = "All Return Books"
			show all rows from Return_Book    
			(
				User
				Book
				Rec_Id as "Rec Id"
				Return_Date as "Return Date"
				Book_Type as "Book Type"
			)
		}
		list Book_Renewal_Approval
		{
			displayName = "Book Renewal Approval"
			show all rows from Borrowed_Book  [Status == "Renewal Request"]  
			(
				User
				Book
				Book_Copy as "Book Copy"
				Borrowed_Date as "Borrowed Date"
				Return_Date as "Return Date"
				Book_Type as "Book Type"
				Status
				custom action "Approve"
				(
	  			workflow = Renewal_Approved
				show action in edit record menu = true
				column header = "Approve"
				condition = (Status == "Renewal Request")
				confirmation before execution
				(
					message for individual record = "Do you Approve this Book  ${Book.Title} -  ${Book.Author} ?"
					confirm button text = "Yes"		
					cancel button text = "No"
				)
				)
				custom action "Deny"
				(
	  			workflow = Renewal_Denied
				show action in edit record menu = true
				column header = "Deny"
				condition = (Status == "Renewal Request")
				)
				Renewal_Date as "Renewal Date"
				Book.Title
				Book.Author
			)
		}
		default summary Library_Details1
		{
			displayName = "Library Details"
			show all rows from Library_Details    
			(
				Library_Name as "Library Name"
				Address 
	 			(
	      			displayformat = [address_line_1+""+address_line_2+""+district_city+""+state_province+""+postal_Code+""+country]
	      			enable = Link_to_Map,Show_As_Text
	 			)
				Website
				Phone_Number as "Phone"
				(
					displayformat = plainnumber 
					linktodial = enable
				)
				Email
			)
			options
			(
				display rows = 10
				display records per row = 2
			)
		}
		list Histroy
		{
			displayName = "Histroy"
			show all rows from Borrowed_Book    
			(
				User
				Book
				Book_Copy as "Book Copy"
				Borrowed_Date as "Borrowed Date"
				Return_Date as "Return Date"
				Renewal_Date as "Renewal Date"
				Book_Type as "Book Type"
				Status
			)
			group by
			(
				User ascending
			)
		}
		list My_Borrow_Request
		{
			displayName = "My Borrow Request"
			show all rows from Borrow_Request  [User.Email == zoho.loginuserid]  
			(
				Borrow_Request_Id as "Borrow Request Id"
				User
				Book
				Request_Date as "Request Date"
				Return_Date as "Return Date"
				Book_Type as "Book Type"
				Status
				Notes
			)
			group by
			(
				Status descending
			)
			conditional formatting
			(
				"Request Approved"
				{
				condition = (Status == "Approved")
				fields = [Status]
				format = "color:#ffffff;background-color:#4ea64c;"
				}
			)
		}
	}
	pages
	{
		page DashBoard
		{
			displayname = "Dashboard"
			Content="<zml    \t\t\n\t\t\n\t\t\tbgColor='#d1d7ed'\n\t\t\n\t\t\n\t\t\n>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width='16%'\n   \t>\n\t<panel elementName='Panel 1'\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\tpadding = '5px'\n\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginLeft = '0px'\n\tmarginRight = '0px' \n\tmarginBottom = '0px'\n\tmarginTop = '0px'\n\tcolor = '#444444'\n\tsize = '16px'\n\tbold = 'true' \n\ttype = 'Text'\n\n\tbgColor = 'transparent'\n\n\n\n\n\n\n\t  value = 'Add a new Book \uD83D\uDC47'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<button \n\t\tmarginLeft = '0px'\n\tmarginRight = '0px' \n\tmarginBottom = '0px'\n\tmarginTop = '0px'\n\n    action = 'OpenForm'\n\t\tcomponentLinkName = 'Book'\n\t\ttarget = 'new-window'\n\tcolor = '#FFFFFF'\n\tsize = '15px'\n\ttext ='Add Book'\n\t\ttype = 'rounded'\n\t\tbgColor = '#0072F4'\n\t\tcornerRadius = '44.25px' \n\/>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column><column\n   \t\t width='21%'\n   \t>\n\t<panel elementName='Panel 3'\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '0px'\n\tbgtype = 'gallery'\n\tbgColor = '#FFFFFF'\n\tbgImageRepeat = 'no-repeat'\n\tbgImagePosition = 'fill'\n\tbgHorizontalAlign = 'center'\n\tbgVerticalAlign = 'top'\n\tbgImage = 'purple.jpg'\n\n\t\twidth = '100%'\n\t\thAlign = 'left'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpaddingTop = '0px'\n\tpaddingLeft = '5px'\n\tpaddingRight = '5px'\n\tpaddingBottom = '0px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginLeft = '0px'\n\tmarginRight = '0px' \n\tmarginBottom = '5px'\n\tmarginTop = '0px'\n\tcolor = '#B328DC'\n\tsize = '16px'\n\tfontFamily = 'RobotoSlab, arimo, sans-serif' \n\ttype = 'Text'\n\n\tbgColor = 'transparent'\n\n\n\n\n\n\n\t  value = 'Total Books'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr><pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = 'transparent'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<image  \n\t\tmarginLeft = '0px'\n\tmarginRight = '0px' \n\tmarginBottom = '0px'\n\tmarginTop = '0px'\n\n\tcolor = '#FFFFFF'\n\tbgColor = 'transparent'\n\twidth = '40px'\n\theight = '40px'\n\ttype = 'icon'\n\tvalue = 'business-books'\n\tsize = '33px'\n\tcornerRadius = '10px'\n\ticonType = 'outline'\n\/>\n<\/pc><pc \n\t\n>\n\t<text \n\n\tmarginLeft = '10px'\n\tmarginRight = '0px' \n\tmarginBottom = '0px'\n\tmarginTop = '0px'\n\tcolor = '#FFFFFF'\n\tsize = '36px'\n\tbold = 'true' \n\tfontFamily = 'RobotoSlab, arimo, sans-serif' \n\ttype = 'Form Data'\n\n\tbgColor = 'transparent'\n\n\n\tdisplayType = 'actual'\n\tthousandsSeperator = 'LOCALE'\n\tdecimalSeperator = 'DOT'\n\tnumberScale = 'none'\n\n\n\n\n\t  value = 'thisapp.Book.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column><column\n   \t\t width='21%'\n   \t>\n\t<panel elementName='Panel'\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '0px'\n\tbgtype = 'gallery'\n\tbgColor = '#FFFFFF'\n\tbgImageRepeat = 'no-repeat'\n\tbgImagePosition = 'fill'\n\tbgHorizontalAlign = 'center'\n\tbgVerticalAlign = 'top'\n\tbgImage = 'blue_1.jpg'\n\n\t\twidth = '100%'\n\t\thAlign = 'left'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpaddingTop = '0px'\n\tpaddingLeft = '5px'\n\tpaddingRight = '5px'\n\tpaddingBottom = '0px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginLeft = '0px'\n\tmarginRight = '0px' \n\tmarginBottom = '5px'\n\tmarginTop = '0px'\n\tcolor = '#1F58B8'\n\tsize = '16px'\n\tfontFamily = 'RobotoSlab, arimo, sans-serif' \n\ttype = 'Text'\n\n\tbgColor = 'transparent'\n\n\n\n\n\n\n\t  value = 'Total Users'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr><pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = 'transparent'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<image  \n\t\tmarginLeft = '0px'\n\tmarginRight = '0px' \n\tmarginBottom = '0px'\n\tmarginTop = '0px'\n\n\tcolor = '#FFFFFF'\n\tbgColor = 'transparent'\n\twidth = '40px'\n\theight = '40px'\n\ttype = 'icon'\n\tvalue = 'users-2-a-check'\n\tsize = '33px'\n\tcornerRadius = '10px'\n\ticonType = 'outline'\n\/>\n<\/pc><pc \n\t\n>\n\t<text \n\n\tmarginLeft = '10px'\n\tmarginRight = '0px' \n\tmarginBottom = '0px'\n\tmarginTop = '0px'\n\tcolor = '#FFFFFF'\n\tsize = '36px'\n\tbold = 'true' \n\tfontFamily = 'RobotoSlab, arimo, sans-serif' \n\ttype = 'Form Data'\n\n\tbgColor = 'transparent'\n\n\n\tdisplayType = 'actual'\n\tthousandsSeperator = 'LOCALE'\n\tdecimalSeperator = 'DOT'\n\tnumberScale = 'none'\n\n\n\n\n\t  value = 'thisapp.User.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column><column\n   \t\t width='21%'\n   \t>\n\t<panel elementName='Panel 4'\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '0px'\n\tbgtype = 'gallery'\n\tbgColor = '#FFFFFF'\n\tbgImageRepeat = 'no-repeat'\n\tbgImagePosition = 'fill'\n\tbgHorizontalAlign = 'center'\n\tbgVerticalAlign = 'center'\n\tbgImage = 'green.jpg'\n\n\t\twidth = '100%'\n\t\thAlign = 'left'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpaddingTop = '0px'\n\tpaddingLeft = '5px'\n\tpaddingRight = '5px'\n\tpaddingBottom = '0px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginLeft = '0px'\n\tmarginRight = '0px' \n\tmarginBottom = '5px'\n\tmarginTop = '0px'\n\tcolor = '#06943F'\n\tsize = '16px'\n\tfontFamily = 'RobotoSlab, arimo, sans-serif' \n\ttype = 'Text'\n\n\tbgColor = 'transparent'\n\n\n\n\n\n\n\t  value = 'Total Return Books'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr><pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = 'transparent'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<image  \n\t\tmarginLeft = '0px'\n\tmarginRight = '0px' \n\tmarginBottom = '0px'\n\tmarginTop = '0px'\n\n\tcolor = '#FFFFFF'\n\tbgColor = 'transparent'\n\twidth = '40px'\n\theight = '40px'\n\ttype = 'icon'\n\tvalue = 'ui-1-check-bold'\n\tsize = '33px'\n\tcornerRadius = '10px'\n\ticonType = 'outline'\n\/>\n<\/pc><pc \n\t\n>\n\t<text \n\n\tmarginLeft = '10px'\n\tmarginRight = '0px' \n\tmarginBottom = '0px'\n\tmarginTop = '0px'\n\tcolor = '#FFFFFF'\n\tsize = '36px'\n\tbold = 'true' \n\tfontFamily = 'RobotoSlab, arimo, sans-serif' \n\ttype = 'Form Data'\n\n\tbgColor = 'transparent'\n\n\n\tdisplayType = 'actual'\n\tthousandsSeperator = 'LOCALE'\n\tdecimalSeperator = 'DOT'\n\tnumberScale = 'none'\n\n\n\n\n\t  value = 'thisapp.Return_Book.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column><column\n   \t\t width='21%'\n   \t>\n\t<panel elementName='Panel 2'\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '0px'\n\tbgtype = 'gallery'\n\tbgColor = '#FFFFFF'\n\tbgImageRepeat = 'no-repeat'\n\tbgImagePosition = 'fill'\n\tbgHorizontalAlign = 'center'\n\tbgVerticalAlign = 'center'\n\tbgImage = 'orange.jpg'\n\n\t\twidth = '100%'\n\t\thAlign = 'left'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpaddingTop = '0px'\n\tpaddingLeft = '5px'\n\tpaddingRight = '5px'\n\tpaddingBottom = '0px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginLeft = '0px'\n\tmarginRight = '0px' \n\tmarginBottom = '5px'\n\tmarginTop = '0px'\n\tcolor = '#CB6711'\n\tsize = '16px'\n\tfontFamily = 'RobotoSlab, arimo, sans-serif' \n\ttype = 'Text'\n\n\tbgColor = 'transparent'\n\n\n\n\n\n\n\t  value = 'Total Borrowed Books'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr><pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = 'transparent'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<image  \n\t\tmarginLeft = '0px'\n\tmarginRight = '0px' \n\tmarginBottom = '0px'\n\tmarginTop = '0px'\n\n\tcolor = '#FFFFFF'\n\tbgColor = 'transparent'\n\twidth = '40px'\n\theight = '40px'\n\ttype = 'icon'\n\tvalue = 'location-bookmark'\n\tsize = '33px'\n\tcornerRadius = '10px'\n\ticonType = 'outline'\n\/>\n<\/pc><pc \n\t\n>\n\t<text \n\n\tmarginLeft = '10px'\n\tmarginRight = '0px' \n\tmarginBottom = '0px'\n\tmarginTop = '0px'\n\tcolor = '#FFFFFF'\n\tsize = '36px'\n\tbold = 'true' \n\tfontFamily = 'RobotoSlab, arimo, sans-serif' \n\ttype = 'Form Data'\n\n\tbgColor = 'transparent'\n\n\n\tdisplayType = 'actual'\n\tthousandsSeperator = 'LOCALE'\n\tdecimalSeperator = 'DOT'\n\tnumberScale = 'none'\n\n\n\n\n\t  value = 'thisapp.Borrowed_Book.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width='16%'\n   \t>\n\t<row>\n\t<column\n   \t\t width='100%'\n   \t>\n\t<panel elementName='Panel 5'\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\tpadding = '5px'\n\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginLeft = '0px'\n\tmarginRight = '0px' \n\tmarginBottom = '0px'\n\tmarginTop = '0px'\n\tcolor = '#444444'\n\tsize = '15px'\n\tbold = 'true' \n\ttype = 'Text'\n\n\tbgColor = 'transparent'\n\n\n\n\n\n\n\t  value = 'Add a new User \uD83D\uDC47'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<button \n\t\tmarginLeft = '0px'\n\tmarginRight = '0px' \n\tmarginBottom = '0px'\n\tmarginTop = '0px'\n\n\tcolor = '#FFFFFF'\n\tsize = '16px'\n\ttext ='New User'\n\t\ttype = 'rounded'\n\t\tbgColor = '#0ABB51'\n\t\tcornerRadius = '45.6px' \n\/>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width='100%'\n   \t>\n\t<panel elementName='Panel 6'\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n\t\tvAlign = 'middle'\n>\n\t<button \n\t\tmarginLeft = '0px'\n\tmarginRight = '0px' \n\tmarginBottom = '0px'\n\tmarginTop = '0px'\n\n    action = 'OpenReport'\n\t\tcomponentLinkName = 'User_Report'\n\t\ttarget = 'new-window'\n\tcolor = '#FFFFFF'\n\tsize = '16px'\n\ttext ='All Users'\n\t\ttype = 'rounded'\n\t\tbgColor = '#0072F4'\n\t\tcornerRadius = '45.6px' \n\/>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row>\n<\/column><column\n   \t\t width='50%'\n   \t>\n\t<chart \n\telementName='Chart 1'\n\n\t\n\ttitle = 'Book Category'\n\t\n            boldTitle = 'true'\n\t\ttitleColor = '#184899'\n\t\ttitleFontFamily = 'arimo, sans-serif'\n\ttype = 'Bar'\n\txtitle = 'Category'\n\tytitle = 'count'\n\tbgColor = '#FFFFFF'\n\ttheme = '#951fb8'\n\tlegendPos = 'none'\n\tappLinkName = 'thisapp'\n\tformLinkName = 'Book'\n\txfield = 'Category'\n\tyfields = 'count:Category'\n\t\tDelugeCriteria = 'Category is not null &amp;&amp; Category != &quot;&quot;'\n\/>\n\n<\/column><column\n   \t\t width='34%'\n   \t>\n\t<chart \n\telementName='Chart'\n\n\ttype = 'Donut'\n\txtitle = 'Request Status'\n\tytitle = 'Count'\n\tbgColor = '#FFFFFF'\n\ttheme = 'theme2'\n\tlegendPos = 'right.center'\n\tappLinkName = 'thisapp'\n\tformLinkName = 'Borrow_Request'\n\txfield = 'Status'\n\tyfields = 'count:Status'\n\/>\n\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width='22%'\n   \t>\n\t<panel elementName='Panel 10'\n \n\t\n\ttitle = 'Book Request Status'\n\t\n            boldTitle = 'true'\n\t\ttitleColor = '#272727'\n\t\ttitleFontFamily = 'arimo, sans-serif'\n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n>\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpaddingTop = '5px'\n\tpaddingLeft = '20px'\n\tpaddingRight = '20px'\n\tpaddingBottom = '5px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<image  \n\t\tmarginLeft = '0px'\n\tmarginRight = '7px' \n\tmarginBottom = '0px'\n\tmarginTop = '0px'\n\n\tcolor = '#FFFFFF'\n\tbgColor = '#9B69FB'\n\twidth = '40px'\n\theight = '40px'\n\ttype = 'icon'\n\tvalue = 'shopping-tag'\n\tsize = '28px'\n\tcornerRadius = '10px'\n\ticonType = 'outline'\n\/>\n<\/pc><pc \n\t\n\t\thAlign = 'left'\n>\n\t<text \n\n\tmarginLeft = '0px'\n\tmarginRight = '0px' \n\tmarginBottom = '0px'\n\tmarginTop = '0px'\n\tcolor = '#9357FB'\n\tsize = '36px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\n\tbgColor = 'transparent'\n\n\n\tdisplayType = 'actual'\n\tthousandsSeperator = 'LOCALE'\n\tdecimalSeperator = 'DOT'\n\tnumberScale = 'none'\n\n\n\n\n\t\tcriteria = 'Status == &quot;Returned&quot;'\n\t  value = 'thisapp.Borrowed_Book.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr><pr \n\t\t\twidth='fill'\n\t\theight='50px'\n>\n\t<pc \n\t\tpadding = '0px'\n\tbgColor = '#9B69FB'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginLeft = '20px'\n\tmarginRight = '20px' \n\tmarginBottom = '0px'\n\tmarginTop = '0px'\n\tcolor = '#FFFFFF'\n\tsize = '16px'\n\ttype = 'Text'\n\n\tbgColor = 'transparent'\n\n\n\n\n\n\n\t  value = 'Borrowed Books'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column><column\n   \t\t width='21%'\n   \t>\n\t<panel elementName='Panel 7'\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n>\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpaddingTop = '5px'\n\tpaddingLeft = '20px'\n\tpaddingRight = '20px'\n\tpaddingBottom = '5px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<image  \n\t\tmarginLeft = '0px'\n\tmarginRight = '7px' \n\tmarginBottom = '0px'\n\tmarginTop = '0px'\n\n\tcolor = '#FFFFFF'\n\tbgColor = '#5AC374'\n\twidth = '40px'\n\theight = '40px'\n\ttype = 'icon'\n\tvalue = 'arrows-4-priority-low'\n\tsize = '28px'\n\tcornerRadius = '10px'\n\ticonType = 'outline'\n\/>\n<\/pc><pc \n\t\n\t\thAlign = 'left'\n>\n\t<text \n\n\tmarginLeft = '0px'\n\tmarginRight = '0px' \n\tmarginBottom = '0px'\n\tmarginTop = '0px'\n\tcolor = '#5AC374'\n\tsize = '36px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\n\tbgColor = 'transparent'\n\n\n\tdisplayType = 'actual'\n\tthousandsSeperator = 'LOCALE'\n\tdecimalSeperator = 'DOT'\n\tnumberScale = 'none'\n\n\n\n\n\t\tcriteria = 'Status == &quot;Returned&quot;'\n\t  value = 'thisapp.Borrowed_Book.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr><pr \n\t\t\twidth='fill'\n\t\theight='50px'\n>\n\t<pc \n\t\tpadding = '0px'\n\tbgColor = '#5AC374'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginLeft = '20px'\n\tmarginRight = '20px' \n\tmarginBottom = '0px'\n\tmarginTop = '0px'\n\tcolor = '#FFFFFF'\n\tsize = '16px'\n\ttype = 'Text'\n\n\tbgColor = 'transparent'\n\n\n\n\n\n\n\t  value = 'Returned Books'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column><column\n   \t\t width='20%'\n   \t>\n\t<panel elementName='Panel 11'\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n>\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpaddingTop = '5px'\n\tpaddingLeft = '20px'\n\tpaddingRight = '20px'\n\tpaddingBottom = '5px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<image  \n\t\tmarginLeft = '0px'\n\tmarginRight = '7px' \n\tmarginBottom = '0px'\n\tmarginTop = '0px'\n\n\tcolor = '#FFFFFF'\n\tbgColor = '#6288EA'\n\twidth = '40px'\n\theight = '40px'\n\ttype = 'icon'\n\tvalue = 'ui-1-pencil'\n\tsize = '28px'\n\tcornerRadius = '10px'\n\ticonType = 'outline'\n\/>\n<\/pc><pc \n\t\n\t\thAlign = 'left'\n>\n\t<text \n\n\tmarginLeft = '0px'\n\tmarginRight = '0px' \n\tmarginBottom = '0px'\n\tmarginTop = '0px'\n\tcolor = '#6288EA'\n\tsize = '36px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\n\tbgColor = 'transparent'\n\n\n\tdisplayType = 'actual'\n\tthousandsSeperator = 'LOCALE'\n\tdecimalSeperator = 'DOT'\n\tnumberScale = 'none'\n\n\n\n\n\t\tcriteria = 'Status == &quot;Renewal Request&quot;'\n\t  value = 'thisapp.Borrowed_Book.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr><pr \n\t\t\twidth='fill'\n\t\theight='50px'\n>\n\t<pc \n\t\tpadding = '0px'\n\tbgColor = '#6288EA'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginLeft = '20px'\n\tmarginRight = '20px' \n\tmarginBottom = '0px'\n\tmarginTop = '0px'\n\tcolor = '#FFFFFF'\n\tsize = '16px'\n\ttype = 'Text'\n\n\tbgColor = 'transparent'\n\n\n\n\n\n\n\t  value = 'Renewal Requested'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column><column\n   \t\t width='19%'\n   \t>\n\t<panel elementName='Panel 9'\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n>\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpaddingTop = '5px'\n\tpaddingLeft = '20px'\n\tpaddingRight = '20px'\n\tpaddingBottom = '5px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<image  \n\t\tmarginLeft = '0px'\n\tmarginRight = '7px' \n\tmarginBottom = '0px'\n\tmarginTop = '0px'\n\n\tcolor = '#FFFFFF'\n\tbgColor = '#3FDBB6'\n\twidth = '40px'\n\theight = '40px'\n\ttype = 'icon'\n\tvalue = 'ui-1-check-circle-07'\n\tsize = '28px'\n\tcornerRadius = '10px'\n\ticonType = 'solid'\n\/>\n<\/pc><pc \n\t\n\t\thAlign = 'left'\n>\n\t<text \n\n\tmarginLeft = '0px'\n\tmarginRight = '0px' \n\tmarginBottom = '0px'\n\tmarginTop = '0px'\n\tcolor = '#3FDBB6'\n\tsize = '36px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\n\tbgColor = 'transparent'\n\n\n\tdisplayType = 'actual'\n\tthousandsSeperator = 'LOCALE'\n\tdecimalSeperator = 'DOT'\n\tnumberScale = 'none'\n\n\n\n\n\t\tcriteria = 'Status == &quot;Renewal Approved&quot;'\n\t  value = 'thisapp.Borrowed_Book.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr><pr \n\t\t\twidth='fill'\n\t\theight='50px'\n>\n\t<pc \n\t\tpadding = '0px'\n\tbgColor = '#3FDBB6'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginLeft = '20px'\n\tmarginRight = '20px' \n\tmarginBottom = '0px'\n\tmarginTop = '0px'\n\tcolor = '#FFFFFF'\n\tsize = '16px'\n\tbold = 'true' \n\ttype = 'Text'\n\n\tbgColor = 'transparent'\n\n\n\n\n\n\n\t  value = 'Renewal Approved'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column><column\n   \t\t width='18%'\n   \t>\n\t<panel elementName='Panel 8'\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n>\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpaddingTop = '5px'\n\tpaddingLeft = '20px'\n\tpaddingRight = '20px'\n\tpaddingBottom = '5px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<image  \n\t\tmarginLeft = '0px'\n\tmarginRight = '7px' \n\tmarginBottom = '0px'\n\tmarginTop = '0px'\n\n\tcolor = '#FFFFFF'\n\tbgColor = '#FF8318'\n\twidth = '40px'\n\theight = '40px'\n\ttype = 'icon'\n\tvalue = 'ui-2-ban'\n\tsize = '28px'\n\tcornerRadius = '10px'\n\ticonType = 'outline'\n\/>\n<\/pc><pc \n\t\n\t\thAlign = 'left'\n>\n\t<text \n\n\tmarginLeft = '0px'\n\tmarginRight = '0px' \n\tmarginBottom = '0px'\n\tmarginTop = '0px'\n\tcolor = '#FF8318'\n\tsize = '36px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\n\tbgColor = 'transparent'\n\n\n\tdisplayType = 'actual'\n\tthousandsSeperator = 'LOCALE'\n\tdecimalSeperator = 'DOT'\n\tnumberScale = 'none'\n\n\n\n\n\t\tcriteria = 'Status == &quot;Renewal Denied&quot;'\n\t  value = 'thisapp.Borrowed_Book.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr><pr \n\t\t\twidth='fill'\n\t\theight='50px'\n>\n\t<pc \n\t\tpadding = '0px'\n\tbgColor = '#FF8D45'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginLeft = '20px'\n\tmarginRight = '20px' \n\tmarginBottom = '0px'\n\tmarginTop = '0px'\n\tcolor = '#FFFFFF'\n\tsize = '16px'\n\ttype = 'Text'\n\n\tbgColor = 'transparent'\n\n\n\n\n\n\n\t  value = 'Renewal Denied'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width='50%'\n   \t>\n\t<chart \n\telementName='Chart 2'\n\n\t\n\ttitle = 'Distribution by User'\n\t\n\t\ttitleSize = '16px'\n\t\ttitleColor = 'transparent'\n\ttype = 'Pie'\n\txtitle = 'Borrowed Book Status'\n\tytitle = 'Count'\n\tbgColor = '#FFFFFF'\n\ttheme = 'theme1'\n\tlegendPos = 'right.center'\n\tappLinkName = 'thisapp'\n\tformLinkName = 'Borrowed_Book'\n\txfield = 'Status'\n\tyfields = 'count:Status'\n\/>\n\n<\/column><column\n   \t\t width='50%'\n   \t>\n\t<chart \n\telementName='Chart 3'\n\n\t\n\ttitle = 'Distribution by Book'\n\t\n\t\ttitleSize = '16px'\n\t\ttitleColor = 'transparent'\n\ttype = 'Bar'\n\txtitle = 'Book'\n\tytitle = 'Count of Book'\n\tbgColor = '#FFFFFF'\n\ttheme = '#06943f'\n\tlegendPos = 'none'\n\tappLinkName = 'thisapp'\n\tformLinkName = 'Borrow_Request'\n\txfield = 'Book.Title'\n\tyfields = 'value:Book.Soft_Copy_Current_Quantity'\n\t\tDelugeCriteria = 'Book.Title is not null'\n\/>\n\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width='100%'\n   \t>\n\t<report \n\telementName='Report'\n\n\t\tappLinkName = 'thisapp'\n\t\tlinkName = 'Borrow_Request_Report'\n\t\n\t\tiszreport = 'false'\n\t\t\t\t\tzc_Footer = 'false'\n\t\t\t\t\tzc_AddRec = 'false'\n\t\t\t\t\tzc_EditRec = 'false'\n\t\t\t\t\tzc_Print = 'false'\n\t\t\t\t\tzc_Export = 'false'\n\t\t\t\t\tzc_DelRec = 'false'\n\t\t\t\t\tzc_DuplRec = 'false'\n\t\t\t\t\tzc_Search = 'false'\n\t\t\t\t\tzc_EditBulkRec = 'false'\n\t\t\t\t\tzc_BulkDelete = 'false'\n\t\t\t\t\tzc_BulkDuplicate = 'false'\n\theightType = 'auto'\n\theightValue = '700'\n\n\/>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>"
		}
		page User_Book_History(int User_ID)
		{
			displayname = "User Book History"
			Content="<zml    \t\t\n\t\t\n\t\t\n\t\t\n\t\t\n>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width='100%'\n   \t>\n\t<dsp id='html_snippet' elementName='HTML Snippet'\n bgColor=\"#FFFFFF\" \n>\n\t<![CDATA[htmlpage html_snippet()\ncontent\n&lt;%{\n\tuser = User[ID == input.User_ID];\n\tall_borrowed_books = Borrowed_Book[User == input.User_ID];\n\t%&gt;\n&lt;head&gt;\n  &lt;link rel=&quot;stylesheet&quot; href=&quot;https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/font-awesome\/4.7.0\/css\/font-awesome.min.css&quot;&gt;\n&lt;\/head&gt;\n\n&lt;div class=&quot;container&quot;&gt;\n&lt;%\n\tif(user.count() &gt; 0)\n\t{\n\t\t%&gt;\n&lt;!-- User Section --&gt;\n  &lt;div class=&quot;card user-card hoverable&quot;&gt;\n    &lt;h2&gt;User Information&lt;\/h2&gt;\n    &lt;div class=&quot;grid&quot;&gt;\n      &lt;div&gt;&lt;strong&gt;Name:&lt;\/strong&gt; &lt;%=user.Name%&gt;&lt;\/div&gt;\n      &lt;div&gt;&lt;strong&gt;Email:&lt;\/strong&gt; &lt;%=user.Email%&gt;&lt;\/div&gt;\n      &lt;div&gt;&lt;strong&gt;Phone:&lt;\/strong&gt; &lt;%=user.Phone_Number%&gt;&lt;\/div&gt;\n      &lt;div&gt;&lt;strong&gt;Address:&lt;\/strong&gt; &lt;%=user.Address%&gt;&lt;\/div&gt;\n    &lt;\/div&gt;\n\t&lt;div class=&quot;grid&quot;&gt;\n\t\t&lt;div&gt;&lt;strong&gt;Membership Type:&lt;\/strong&gt; &lt;%=user.Membership_Type%&gt;&lt;\/div&gt;\n    \t&lt;div&gt;&lt;strong&gt;Books Count:&lt;\/strong&gt; &lt;%=user.Current_Books_Count%&gt;\/&lt;%=user.Max_Book_Allowed%&gt;&lt;\/div&gt;\n  \t&lt;\/div&gt;\n  &lt;\/div&gt;\n\n  &lt;!-- Borrowed Books Section --&gt;\n  &lt;div class=&quot;card book-card hoverable&quot;&gt;\n    &lt;h2&gt;Borrowed Books Information&lt;\/h2&gt;\n&lt;%\n\t\tfor each  borrowed_books in all_borrowed_books\n\t\t{\n\t\t\tbook = Book[ID == borrowed_books.Book];\n\t\t\t%&gt;\n&lt;div class=&quot;borrowed_books-block hoverable&quot;&gt;\n          &lt;div class=&quot;grid&quot;&gt;\n            &lt;div&gt;&lt;strong&gt;Borrowed Date:&lt;\/strong&gt; &lt;%=borrowed_books.Borrowed_Date%&gt;&lt;\/div&gt;\n          \t&lt;div&gt;&lt;strong&gt;Return Date:&lt;\/strong&gt; &lt;%=borrowed_books.Return_Date%&gt;&lt;\/div&gt;\n          &lt;\/div&gt;\n          &lt;h3 style=&quot;margin-top: 1rem;&quot;&gt;Book Info:&lt;\/h3&gt;\n\t\t    &lt;div class=&quot;grid&quot;&gt;\n\t\t  \t\t&lt;div&gt;&lt;strong&gt;Book Title:&lt;\/strong&gt; &lt;%=book.Title%&gt;&lt;\/div&gt;\n            \t&lt;div&gt;&lt;strong&gt;Author:&lt;\/strong&gt; &lt;%=book.Author%&gt;&lt;\/div&gt;\n\t\t\t&lt;\/div&gt;\n        &lt;\/div&gt;\n&lt;%\n\t\t}\n\t\t%&gt;\n&lt;\/div&gt;\n&lt;%\n\t}\n\t%&gt;\n&lt;\/div&gt;\n\n&lt;style&gt;\n  .container {\n    max-width: 1200px;\n    margin: auto;\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n  }\n\n  .card {\n    background-color: #fff;\n    border-radius: 10px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);\n    padding: 1.5rem;\n    transition: transform 0.2s ease, box-shadow 0.2s ease;\n  }\n\n  .user-card {\n    border-top: 10px solid #3b82f6; \n  }\n\n  .book-card {\n    border-top: 10px solid #10b981; \n  }\n\n  .card h2 {\n    margin-top: 0;\n    font-size: 1.25rem;\n    margin-bottom: 1rem;\n  }\n\n  .grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));\n    gap: 1rem;\n  }\n\n  .borrowed_books-block {\n    border: 1px solid #e5e7eb;\n    border-bottom: 4px solid #8b5cf6; \/* Violet bottom border *\/\n    border-radius: 8px;\n    padding: 1rem;\n    margin-top: 1.5rem;\n    background-color: #fdfdfd;\n    transition: transform 0.2s ease, box-shadow 0.2s ease, background-color 0.2s ease;\n  }\n\n  .hoverable:hover {\n    transform: scale(1.01);\n    box-shadow: 0 6px 14px rgba(0, 0, 0, 0.1);\n    background-color: #fefefe;\n  }\n\n  .error {\n    font-family: Arial, sans-serif;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    color: #333;\n  }\n\n  .error img {\n    max-width: 300px;\n    margin-bottom: 20px;\n  }\n\n  .error p {\n    font-size: 1.2em;\n    color: #666;\n  }\n&lt;\/style&gt;\n&lt;%\n\n}%&gt;]]>\n<\/dsp>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>"
		}
		page Show_by_Section
		{
			displayname = "Show by Section"
			Content="<zml    \t\t\n\t\t\n\t\t\n\t\t\n\t\t\n>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width='100%'\n   \t>\n\t<dsp id='html_snippet1' elementName='HTML Snippet'\n bgColor=\"#FFFFFF\" \n\t\n\ttitle = 'Library Sections Visually'\n\t\n            boldTitle = 'true'\n\t\ttitleColor = '#444444'\n\t\ttitleFontFamily = 'arimo, sans-serif'\n>\n\t<![CDATA[htmlpage html_snippet1()\ncontent\n&lt;%{\n\t%&gt;\n&lt;div class=&quot;library-container&quot;&gt;\n  &lt;div class=&quot;library&quot;&gt;\n    &lt;a href=&quot;#Page:Show_by_Section_Books?Section=Reference&quot; class=&quot;section reference&quot;&gt;Reference&lt;\/a&gt;\n    &lt;a href=&quot;#Page:Show_by_Section_Books?Section=Religion and History&quot; class=&quot;section religion&quot;&gt;Religion &amp; History&lt;\/a&gt;\n    &lt;a href=&quot;#Page:Show_by_Section_Books?Section=Computer Science&quot; class=&quot;section cs&quot;&gt;Computer Science&lt;\/a&gt;\n    &lt;a href=&quot;#Page:Show_by_Section_Books?Section=Circulation&quot; class=&quot;section circulation&quot;&gt;Circulation&lt;\/a&gt;\n    &lt;a href=&quot;#Page:Show_by_Section_Books?Section=Technical Processing&quot; class=&quot;section processing&quot;&gt;Technical Processing&lt;\/a&gt;\n    &lt;a href=&quot;#Page:Show_by_Section_Books?Section=Periodical Section&quot; class=&quot;section periodical&quot;&gt;Periodical Section&lt;\/a&gt;\n    &lt;a href=&quot;#Page:Show_by_Section_Books?Section=Digital Library&quot; class=&quot;section digital&quot;&gt;Digital Library&lt;\/a&gt;\n    &lt;a href=&quot;#Page:Show_by_Section_Books?Section=Mathematics&quot; class=&quot;section math&quot;&gt;Mathematics&lt;\/a&gt;\n    &lt;a href=&quot;#Page:Show_by_Section_Books?Section=Other&quot; class=&quot;section other&quot;&gt;Other&lt;\/a&gt;\n\n    &lt;div class=&quot;entrance&quot;&gt;Entrance&lt;\/div&gt;\n    &lt;div class=&quot;exit&quot;&gt;Exit&lt;\/div&gt;\n  &lt;\/div&gt;\n  &lt;a id=&quot;back-btn&quot; href=&quot;#Page:Home_Page&quot;&gt;\u2B05 Back&lt;\/a&gt;\n&lt;\/div&gt;\n\n&lt;style&gt;\n  .library-container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .library {\n    position: relative;\n    width: 850px;\n    height: 78vh;\n    border: 5px solid #3d44ab;\n    border-radius: 12px;\n    background-color: #eceefa;\n    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);\n    overflow: hidden;\n  }\n\n  #back-btn {\n    position: absolute;\n    bottom: 20px;\n    left: 20px;\n    background-color: #28a745;\n    color: white;\n    padding: 10px 22px;\n    font-size: 15px;\n    text-align: center;\n    text-decoration: none;\n    border-radius: 8px;\n    font-family: &apos;Inter&apos;, sans-serif;\n    transition: background-color 0.3s ease, transform 0.2s ease;\n    z-index: 10;\n    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);\n  }\n\n  #back-btn:hover {\n    background-color: #1e7e34;\n    transform: scale(1.05);\n  }\n\n  .section {\n    position: absolute;\n    color: #fff;\n    text-decoration: none;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-weight: bold;\n    border-radius: 8px;\n    transition: background-color 0.3s ease;\n    cursor: pointer;\n  }\n\n  .reference { background-color: #6C5CE7; top: 20px; left: 20px; width: 180px; height: 100px; }\n  .reference:hover { background-color: #4834d4; }\n\n  .religion { background-color: #D63031; top: 20px; left: 220px; width: 160px; height: 100px; }\n  .religion:hover { background-color: #b71c1c; }\n\n  .cs { background-color: #00B894; top: 20px; left: 400px; width: 160px; height: 100px; }\n  .cs:hover { background-color: #009879; }\n\n  .other { background-color: #FDCB6E; top: 20px; left: 580px; width: 220px; height: 440px; color: #222; }\n  .other:hover { background-color: #e1a300; }\n\n  .circulation { background-color: #E17055; top: 140px; left: 20px; width: 250px; height: 100px; }\n  .circulation:hover { background-color: #d35400; }\n\n  .processing { background-color: #FAB1A0; top: 140px; left: 290px; width: 180px; height: 100px; color: #222; }\n  .processing:hover { background-color: #e17055; }\n\n  .periodical { background-color: #00CEC9; top: 260px; left: 20px; width: 220px; height: 100px; }\n  .periodical:hover { background-color: #008b8b; }\n\n  .digital { background-color: #55EFC4; top: 260px; left: 260px; width: 220px; height: 100px; color: #111; }\n  .digital:hover { background-color: #00b894; color: #fff; }\n\n  .math { background-color: #0984E3; top: 380px; left: 20px; width: 460px; height: 80px; }\n  .math:hover { background-color: #0652dd; }\n\n  .entrance, .exit {\n    position: absolute;\n    width: 120px;\n    height: 60px;\n    font-weight: bold;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: white;\n    border-top-left-radius: 60px;\n    border-top-right-radius: 60px;\n    text-decoration: none;\n  }\n\n  .entrance {\n    background-color: #4CAF50;\n    bottom: 20px;\n    left: 160px;\n  }\n\n  .exit {\n    background-color: #E53935;\n    bottom: 20px;\n    right: 40px;\n  }\n&lt;\/style&gt;\n&lt;%\n\n}%&gt;]]>\n<\/dsp>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>"
		}
		page Show_by_Section_Books(string Section)
		{
			displayname = "Show by Section Books"
			Content="<zml    \t\t\n\t\t\n\t\t\n\t\t\n\t\t\n>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width='100%'\n   \t>\n\t<dsp id='html_snippet2' elementName='HTML Snippet'\n bgColor=\"#F4F4F4\" \n>\n\t<![CDATA[htmlpage html_snippet2()\ncontent\n&lt;%{\n\tif(input.Section == null || input.Section == &quot;&quot;)\n\t{\n\t\topenUrl(&quot;#Page:Show_by_Section&quot;,&quot;same window&quot;);\n\t}\n\tcolors = {&quot;#e74c3c&quot;,&quot;#8e44ad&quot;,&quot;#3498db&quot;,&quot;#16a085&quot;,&quot;#e67e22&quot;,&quot;#2c3e50&quot;,&quot;#1abc9c&quot;,&quot;#c0392b&quot;,&quot;#27ae60&quot;,&quot;#d35400&quot;};\n\tselected_book = Book[Book_Section == input.Section] sort by Added_Time desc;\n\t%&gt;\n&lt;div class=&quot;full-page-container&quot;&gt;\n    &lt;h2&gt;&lt;img src=&quot;https:\/\/img.icons8.com\/color\/48\/000000\/books.png&quot; class=&quot;library-icon&quot;\/&gt; Section: &lt;%=input.Section%&gt;&lt;\/h2&gt;\n    &lt;div class=&quot;library-container&quot;&gt;\n&lt;%\n\tif(selected_book.count(Title) &gt; 0)\n\t{\n\t\tfor each  book in selected_book\n\t\t{\n\t\t\ttitle = book.Title;\n\t\t\tif(book.Image != null &amp;&amp; book.Image != &quot;&quot;)\n\t\t\t{\n\t\t\t\timage = book.Image.subString(12).getprefix(&quot;\\&quot; lowqual = &quot;).replaceAll(&quot;https:\/\/creator.zoho.in\/sharedBy\/appLinkName\/viewLinkName\/fieldName\/image&quot;,&quot;https:\/\/creator.zoho.in\/&quot; + zoho.appuri + &quot;\/Book_Report\/Image\/image&quot;);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\timage = &quot;https:\/\/yearbook.unwe.bg\/img\/journalcover.jpeg&quot;;\n\t\t\t}\n\t\t\t%&gt;\n&lt;a href=&quot;#Page:Book_Popup?Book_ID=&lt;%=book.ID%&gt;&amp;Cancel_Btn=#Page:Show_by_Section_Books?Section=&lt;%=input.Section%&gt;&quot; class=&quot;book-card&quot;&gt;\n    &lt;div class=&quot;card-left&quot;&gt;\n        &lt;div class=&quot;book-title&quot;&gt;&lt;%=title%&gt;&lt;\/div&gt;\n        &lt;div class=&quot;book-author&quot;&gt;&lt;%=book.Author%&gt;&lt;\/div&gt;\n        &lt;div class=&quot;book-language&quot;&gt;&lt;%=book.Language1%&gt;&lt;\/div&gt;\n    &lt;\/div&gt;\n    &lt;div class=&quot;card-image&quot;&gt;\n        &lt;img src=&quot;&lt;%=image%&gt;&quot; alt=&quot;Book Cover&quot;&gt;\n    &lt;\/div&gt;\n&lt;\/a&gt;\n&lt;%\n\t\t}\n\t}\n\t%&gt;\n&lt;\/div&gt;\n&lt;a id=&quot;back-btn&quot; href=&quot;#Page:Show_by_Section&quot;&gt;\u2B05 Back&lt;\/a&gt;\n&lt;\/div&gt;\n\n&lt;style&gt;\n    #back-btn {\n        position: absolute;\n        bottom: 20px;\n        left: 20px;\n        background-color: #28a745;\n        color: white;\n        padding: 10px 22px;\n        font-size: 15px;\n        text-align: center;\n        text-decoration: none;\n        border-radius: 8px;\n        transition: background-color 0.3s ease, transform 0.2s ease;\n        z-index: 10;\n        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);\n    }\n\n    #back-btn:hover {\n        background-color: #1e7e34;\n        transform: scale(1.05);\n    }\n\n    .full-page-container {\n        height: 78vh;\n        width: 95vw;\n        background: #f4f4f4;\n        padding: 20px;\n    }\n\n    h2 {\n        font-size: 28px;\n        margin-bottom: 30px;\n        font-weight: 700;\n        display: flex;\n        align-items: center;\n        gap: 10px;\n        background: #f4f4f4;\n    }\n\n    .library-icon {\n        width: 30px;\n        height: 30px;\n    }\n\n    .library-container {\n        display: grid;\n        grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));\n        gap: 16px;\n    }\n\n    .book-card {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        background: white;\n        border-radius: 10px;\n        padding: 10px 12px;\n        box-shadow: 0 2px 6px rgba(0,0,0,0.1);\n        cursor: pointer;\n        transition: transform 0.2s;\n        text-decoration: none;\n        color: inherit;\n    }\n\n    .book-card:hover {\n        transform: scale(1.02);\n    }\n\n    .card-left {\n        flex: 1;\n    }\n\n    .book-title {\n        font-weight: 600;\n        font-size: 16px;\n        margin-bottom: 4px;\n        color: #222;\n    }\n\n    .book-author {\n        font-size: 14px;\n        color: #555;\n        margin-bottom: 2px;\n    }\n\n    .book-language {\n        font-size: 13px;\n        color: #388e3c;\n        font-weight: 500;\n    }\n\n    .card-image {\n        width: 50px;\n        height: 70px;\n        flex-shrink: 0;\n        border-radius: 6px;\n        overflow: hidden;\n        box-shadow: 0 2px 6px rgba(0,0,0,0.15);\n    }\n\n    .card-image img {\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n        border-radius: 6px;\n    }\n\n    @media (max-width: 600px) {\n        .library-container {\n            grid-template-columns: repeat(1, 1fr);\n        }\n    }\n&lt;\/style&gt;\n&lt;%\n\n}%&gt;]]>\n<\/dsp>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>"
		}
		page Home_Page
		{
			displayname = "Home Page"
			Content="<zml    \t\t\n\t\t\n\t\t\n\t\t\twebDeviceConfig='{\"layout\":{\"displayType\":\"plain\",\"design\":\"fluid\",\"style\":\"padding-right:0px;padding-top:0px;padding-bottom:0px;padding-left:0px;\"}}'\n\t\t\n\t\t\n>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width='100%'\n   \t>\n\t<dsp id='html_snippet3' elementName='HTML Snippet'\n bgColor=\"#FFFFFF\" \n>\n\t<![CDATA[htmlpage html_snippet3()\ncontent\n&lt;%{\n\tcolors = {&quot;#e74c3c&quot;,&quot;#8e44ad&quot;,&quot;#3498db&quot;,&quot;#16a085&quot;,&quot;#e67e22&quot;,&quot;#2c3e50&quot;,&quot;#1abc9c&quot;,&quot;#c0392b&quot;,&quot;#27ae60&quot;,&quot;#d35400&quot;};\n\tyear = zoho.currentdate.getYear();\n\tlibrary = Library_Details[ID != 0];\n\tselected_book = Book[ID != 0] sort by Added_Time desc range from 0 to 10;\n\t%&gt;\n&lt;header&gt;\n  &lt;h1&gt;Welcome to the &lt;%=library.Library_Name%&gt;&lt;\/h1&gt;\n  &lt;p&gt;Your gateway to knowledge&lt;\/p&gt;\n&lt;\/header&gt;\n\n&lt;!-- Section 1: View All Books --&gt;\n&lt;div class=&quot;section&quot; style=&quot;background-image: url(&apos;https:\/\/github.com\/sakthiaj29\/deluge\/blob\/main\/Creator\/images\/all-books-collection-background.jpg?raw=true&apos;);&quot;&gt;\n  &lt;div class=&quot;overlay&quot;&gt;\n    &lt;h2&gt;Explore Our Collection&lt;\/h2&gt;\n    &lt;p&gt;Click below to view all available books in the library.&lt;\/p&gt;\n    &lt;a href=&quot;#Page:All_Books&quot;&gt;&lt;button class=&quot;btns&quot;&gt;View All Books&lt;\/button&gt;&lt;\/a&gt;\n  &lt;\/div&gt;\n&lt;\/div&gt;\n\n&lt;!-- Scrollable Book Section --&gt;\n&lt;div class=&quot;scroll-section&quot;&gt;\n  &lt;h2&gt;Recently Added Books&lt;\/h2&gt;\n  &lt;div class=&quot;scroll-wrapper&quot;&gt;\n    &lt;div class=&quot;scroll-content&quot;&gt;\n&lt;%\n\tfor each  book in selected_book\n\t{\n\t\ttitle = book.Title;\n\t\timage = &quot;&quot;;\n\t\tif(book.Image != null &amp;&amp; book.Image != &quot;&quot;)\n\t\t{\n\t\t\timage = book.Image.subString(12).getprefix(&quot;\\&quot; lowqual = &quot;).replaceAll(&quot;https:\/\/creator.zoho.in\/sharedBy\/appLinkName\/viewLinkName\/fieldName\/image&quot;,&quot;https:\/\/creator.zoho.in\/&quot; + zoho.appuri + &quot;\/Book_Report\/Image\/image&quot;);\n\t\t}\n\t\telse\n\t\t{\n\t\t\timage = &quot;https:\/\/yearbook.unwe.bg\/img\/journalcover.jpeg&quot;;\n\t\t}\n\t\t%&gt;\n&lt;a class=&quot;book-card&quot; href=&quot;#Page:Book_Popup?Book_ID=&lt;%=book.ID%&gt;&amp;Cancel_Btn=#Page:Home_Page&quot;&gt;\n  &lt;div class=&quot;card-left&quot;&gt;\n    &lt;div class=&quot;book-title&quot;&gt;&lt;%=title%&gt;&lt;\/div&gt;\n    &lt;div class=&quot;book-author&quot;&gt;&lt;%=book.Author%&gt;&lt;\/div&gt;\n    &lt;div class=&quot;book-language&quot;&gt;&lt;%=book.Language1%&gt;&lt;\/div&gt;\n  &lt;\/div&gt;\n  &lt;div class=&quot;card-image&quot;&gt;\n    &lt;img src=&quot;&lt;%=image%&gt;&quot; alt=&quot;Book Cover&quot;&gt;\n  &lt;\/div&gt;\n&lt;\/a&gt;\n&lt;%\n\t}\n\t%&gt;\n&lt;\/div&gt;\n  &lt;\/div&gt;\n&lt;\/div&gt;\n\n&lt;!-- Section 2: View by Sections --&gt;\n&lt;div class=&quot;section&quot; style=&quot;background-image: url(&apos;https:\/\/github.com\/sakthiaj29\/deluge\/blob\/main\/Creator\/images\/section-background.jpg?raw=true&apos;);&quot;&gt;\n  &lt;div class=&quot;overlay&quot;&gt;\n    &lt;h2&gt;Browse by Sections&lt;\/h2&gt;\n    &lt;p&gt;Find books sorted by category:&lt;\/p&gt;\n    &lt;a href=&quot;#Page:Show_by_Section&quot;&gt;&lt;button class=&quot;btns&quot;&gt;View by Section&lt;\/button&gt;&lt;\/a&gt;\n  &lt;\/div&gt;\n&lt;\/div&gt;\n\n&lt;!-- Footer --&gt;\n&lt;footer&gt;\n   &lt;p&gt;Address: \t&lt;%=library.Address%&gt;&lt;\/p&gt;&lt;\/br&gt;\n  &lt;p&gt;Contact us: &lt;a href=&quot;mailto:&lt;%=library.Email%&gt;&quot;&gt;&lt;%=library.Email%&gt;&lt;\/a&gt;&lt;\/p&gt;\n  &lt;p&gt;&amp;copy; &lt;%=year%&gt; &lt;%=library.Library_Name%&gt;. All rights reserved.&lt;\/p&gt;\n&lt;\/footer&gt;\n\n&lt;style&gt;\n  body {\n    margin: 0;\n    font-family: &apos;Segoe UI&apos;, sans-serif;\n  }\n\n  header {\n    background-color: #003366;\n    color: white;\n    padding: 25px 20px;\n    text-align: center;\n  }\n\n  .section {\n    padding: 60px 20px;\n    text-align: center;\n    color: white;\n    background-size: cover;\n    background-position: center;\n    position: relative;\n  }\n\n  .overlay {\n    background-color: rgba(0, 0, 0, 0.5);\n    padding: 60px 20px;\n  }\n\n  .btns {\n    background-color: #007BFF;\n    color: white;\n    border: none;\n    padding: 15px 30px;\n    font-size: 18px;\n    border-radius: 8px;\n    cursor: pointer;\n    transition: background 0.3s ease;\n  }\n\n  .btns:hover {\n    background-color: #0056b3;\n  }\n\n  \/* Scroll Section *\/\n  .scroll-section {\n    background-color: #003366;\n    color: white;\n    padding: 30px 10px;\n    text-align: center;\n    overflow: hidden;\n  }\n\n  .scroll-section h2 {\n    margin-bottom: 20px;\n  }\n\n  .scroll-wrapper {\n    overflow: hidden;\n    width: 100%;\n    position: relative;\n  }\n\n  .scroll-content {\n    display: flex;\n    gap: 25px;\n    animation: scrollLeft 30s linear infinite;\n    width: max-content;\n  }\n\n  @keyframes scrollLeft {\n    0% { transform: translateX(0); }\n    100% { transform: translateX(-50%); }\n  }\n\n  .book-card {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    background: white;\n    border-radius: 12px;\n    padding: 10px 16px;\n    min-width: 320px;\n    max-width: 340px;\n    height: 120px;\n    box-shadow: 0 4px 10px rgba(0,0,0,0.15);\n    cursor: pointer;\n    transition: transform 0.2s ease;\n    text-decoration: none;\n    color: inherit;\n  }\n\n  .book-card:hover {\n    transform: scale(1.03);\n  }\n\n  .card-left {\n    flex: 1;\n    padding-right: 10px;\n    text-align: left;\n  }\n\n  .book-title {\n    font-weight: 600;\n    font-size: 16px;\n    margin-bottom: 4px;\n    color: #222;\n  }\n\n  .book-author {\n    font-size: 14px;\n    color: #555;\n    margin-bottom: 2px;\n  }\n\n  .book-language {\n    font-size: 13px;\n    color: #388e3c;\n    font-weight: 500;\n  }\n\n  .card-image {\n    width: 80px;\n    height: 100%;\n    flex-shrink: 0;\n    border-radius: 8px;\n    overflow: hidden;\n    box-shadow: 0 2px 6px rgba(0,0,0,0.1);\n  }\n\n  .card-image img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    border-radius: 8px;\n  }\n\n  footer {\n    background-color: #003366;\n    color: white;\n    text-align: center;\n    padding: 20px 10px;\n  }\n\n  footer a {\n    color: #a0d8ff;\n    text-decoration: none;\n  }\n&lt;\/style&gt;\n&lt;%\n\n}%&gt;]]>\n<\/dsp>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>"
		}
		page Book_Popup(int Book_ID, string Cancel_Btn)
		{
			displayname = "Book Popup"
			Content="<zml    \t\t\n\t\t\n\t\t\n\t\t\n\t\t\n>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width='100%'\n   \t>\n\t<dsp id='html_snippet4' elementName='HTML Snippet'\n bgColor=\"#FFFFFF\" \n>\n\t<![CDATA[htmlpage html_snippet4()\ncontent\n&lt;%{\n\tcolors = {&quot;#e74c3c&quot;,&quot;#8e44ad&quot;,&quot;#3498db&quot;,&quot;#16a085&quot;,&quot;#e67e22&quot;,&quot;#2c3e50&quot;,&quot;#1abc9c&quot;,&quot;#c0392b&quot;,&quot;#27ae60&quot;,&quot;#d35400&quot;};\n\tbook = Book[ID == input.Book_ID];\n\ttitle = book.Title;\n\tif(book.Image != null &amp;&amp; book.Image != &quot;&quot;)\n\t{\n\t\timage = book.Image.subString(12).getprefix(&quot;\\&quot; lowqual = &quot;).replaceAll(&quot;https:\/\/creator.zoho.in\/sharedBy\/appLinkName\/viewLinkName\/fieldName\/image&quot;,&quot;https:\/\/creator.zoho.in\/&quot; + zoho.appuri + &quot;\/Book_Report\/Image\/image&quot;);\n\t}\n\telse\n\t{\n\t\timage = &quot;https:\/\/yearbook.unwe.bg\/img\/journalcover.jpeg&quot;;\n\t}\n\t%&gt;\n&lt;div id=&quot;bookModal&quot; class=&quot;modal&quot;&gt;\n  &lt;div class=&quot;modal-content&quot;&gt;\n    &lt;span class=&quot;close&quot; onclick=&quot;closeModal()&quot;&gt;&lt;a href=&quot;&lt;%=input.Cancel_Btn%&gt;&quot;&gt;&amp;times;&lt;\/a&gt;&lt;\/span&gt;\n    &lt;div class=&quot;modal-body&quot;&gt;\n      &lt;div class=&quot;modal-info&quot;&gt;\n        &lt;h2 id=&quot;modalTitle&quot;&gt;&lt;%=title%&gt;&lt;\/h2&gt;\n        &lt;p&gt;&lt;strong&gt;Author:&lt;\/strong&gt; &lt;span id=&quot;modalAuthor&quot;&gt;&lt;%=book.Author%&gt;&lt;\/span&gt;&lt;\/p&gt;\n        &lt;p&gt;&lt;strong&gt;Category:&lt;\/strong&gt; &lt;span id=&quot;modalCategory&quot;&gt;&lt;%=book.Category%&gt;&lt;\/span&gt;&lt;\/p&gt;\n        &lt;p&gt;&lt;strong&gt;Language:&lt;\/strong&gt; &lt;span id=&quot;modalSection&quot;&gt;&lt;%=book.Language1%&gt;&lt;\/span&gt;&lt;\/p&gt;\n\t\t&lt;p&gt;&lt;strong&gt;Section:&lt;\/strong&gt; &lt;span id=&quot;modalSection&quot;&gt;&lt;%=book.Book_Section%&gt;&lt;\/span&gt;&lt;\/p&gt;\n        &lt;p&gt;&lt;strong&gt;Rack:&lt;\/strong&gt; &lt;span id=&quot;modalRack&quot;&gt;&lt;%=book.Rac_Number%&gt;&lt;\/span&gt;&lt;\/p&gt;\n        &lt;a href=&quot;#Form:Borrow_Request?Book=&lt;%=input.Book_ID%&gt;&quot; id=&quot;borrowLink&quot; class=&quot;borrow-link&quot; target=&quot;popup&quot;&gt;Borrow Request&lt;\/a&gt;\n      &lt;\/div&gt;\n      &lt;div class=&quot;modal-image&quot;&gt;\n        &lt;img src=&quot;&lt;%=image%&gt;&quot; alt=&quot;Book Cover&quot; \/&gt;\n      &lt;\/div&gt;\n    &lt;\/div&gt;\n  &lt;\/div&gt;\n&lt;\/div&gt;\n\n&lt;style&gt;\n.modal {\n  position: fixed;\n  z-index: 1000;\n  left: 0; top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0,0,0,0.5);\n}\n\n.modal-content {\n  background: white;\n  margin: 8% auto;\n  padding: 0;\n  border-radius: 10px;\n  width: 90%;\n  max-width: 600px;\n  position: relative;\n}\n\n.modal-body {\n  display: flex;\n  flex-direction: row;\n  padding: 30px;\n  gap: 20px;\n}\n\n.close {\n  position: absolute;\n  top: 10px;\n  right: 16px;\n  font-size: 24px;\n  cursor: pointer;\n  color: #999;\n}\n\n.modal-info {\n  flex: 2;\n}\n\n.modal-info h2 {\n  margin-top: 0;\n  color: #003366;\n}\n\n.modal-image {\n  flex: 1;\n  width: 120px;\n  height: 260px;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.modal-image img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 8px;\n}\n\n.borrow-link {\n  display: inline-block;\n  margin-top: 20px;\n  background-color: #28a745;\n  color: white;\n  text-decoration: none;\n  padding: 10px 16px;\n  border-radius: 6px;\n  transition: background-color 0.3s ease;\n}\n\n.borrow-link:hover {\n  background-color: #1e7e34;\n}\n\n@media (max-width: 600px) {\n  .modal-body {\n    flex-direction: column-reverse;\n    align-items: center;\n  }\n\n  .modal-image {\n    width: 140px;\n    height: 200px;\n  }\n}\n&lt;\/style&gt;\n\n&lt;script&gt;\nfunction closeModal() {\n  document.getElementById(&apos;bookModal&apos;).style.display = &apos;none&apos;;\n}\n&lt;\/script&gt;\n&lt;%\n\n}%&gt;]]>\n<\/dsp>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>"
		}
		page All_Books
		{
			displayname = "All Books"
			Content="<zml    \t\t\n\t\t\n\t\t\n\t\t\n\t\t\n>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width='100%'\n   \t>\n\t<widgets elementName='Widget' importedTemplate='true'\/>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>"
		}
		page test
		{
			displayname = "test"
			Content="<zml    \t\t\n\t\t\n\t\t\n\t\t\n\t\t\n>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width='100%'\n   \t>\n\t<widgets elementName='Widget' importedTemplate='true'\/>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>"
		}
	}


		 functions
		 {
			 Deluge
			 {
				 void sample()
                 {
                 	// 	//https://creator.zoho.in/syngridss/library-management-system/Book_Report/Image/image/1750480844493820_Differential_Calculus.jpg
                 	// 	image="/api/v2.1/syngridss/library-management-system/report/Book_Report/292239000000060039/Image/download?filepath=1750480844493820_Differential_Calculus.jpg";
                 	// 	info image.getsuffix("filepath=");
                 	// 	book = Borrowed_Book[Return_Date == zoho.currentdate.addDay(1)];
                 	// 	info book.Return_Date;
                 	// 	book = Book[ID == 292239000000060039];
                 	// 	image1 = book.Image.subString(12).getprefix("\" lowqual = ").replaceAll("https://creator.zoho.in/sharedBy/appLinkName/viewLinkName/fieldName/image","https://creator.zoho.in/" + zoho.appuri + "/Book_Report/Image/image");
                 	// 	info image1;
                 	//<img src="https://download.zoho.in/webdownload?x-service=ZohoCreator&amp;event-id=292239000000060039_Image&amp;x-cli-msg=JTdCJTIycmVjb3JkaWQlMjIlM0ElMjIyOTIyMzkwMDAwMDAwNjAwMzklMjIlMkMlMjJkaWdlc3RWYWx1ZSUyMiUzQSUyMmV5SnNZVzVuZFdGblpTSTZJbVZ1SW4wJTNEJTIyJTJDJTIyZmllbGRsaW5rbmFtZSUyMiUzQSUyMkltYWdlJTIyJTJDJTIyZmlsZXBhdGglMjIlM0ElMjIxNzUwNDgwODQ0NDkzODIwXzcxMCUyMiUyQyUyMmFwcGxpbmtuYW1lJTIyJTNBJTIybGlicmFyeS1tYW5hZ2VtZW50LXN5c3RlbSUyMiUyQyUyMmxvZ2luWnVpZCUyMiUzQSUyMjYwMDQxMzUzOTEyJTIyJTJDJTIydmlld2xpbmtuYW1lJTIyJTNBJTIyQm9va19SZXBvcnQlMjIlMkMlMjJzY29wZW5hbWUlMjIlM0ElMjJzeW5ncmlkc3MlMjIlMkMlMjJpc1B1YmxpYyUyMiUzQWZhbHNlJTJDJTIyZG93bmxvYWR0eXBlJTIyJTNBJTIyaW1hZ2UlMjIlMkMlMjJsb2dpbkVtYWlsaWQlMjIlM0ElMjJhc3NldG1hbmFnZW1lbnRzeW5ncmlkJTQwZ21haWwuY29tJTIyJTJDJTIyaXNBdHRhY2htZW50JTIyJTNBZmFsc2UlN0Q%3D" downqual="https://creatorapp.zoho.in/syngridss/library-management-system/report/Book_Report/292239000000060039/Image/download-file?filepath=/1750480844493820_Differential_Calculus.jpg&amp;digestValue=eyJsYW5ndWFnZSI6ImVuIn0=" border="0" labelname="Image" alt="Image" displayname="Image" elname="zc-ShowPreviewImgEl" class="zc-image-view">
                 	//https://creator.zoho.in/syngridss/library-management-system/Book_Report/Image/image/1750480844493820_Differential_Calculus.jpg
                 	//https://creator.zoho.in/sharedBy/appLinkName/viewLinkName/fieldName/image/1750480844493820_Differential_Calculus.jpg	
                 	//	<img src = "https://creator.zoho.in/sharedBy/appLinkName/viewLinkName/fieldName/image/1750480844493820_Differential_Calculus.jpg" lowqual = "https://creator.zoho.in/sharedBy/appLinkName/viewLinkName/fieldName/image/1750480844493820_710" medqual = "https://creator.zoho.in/sharedBy/appLinkName/viewLinkName/fieldName/image/1750480844493820_710" downqual = "https://creator.zoho.in/sharedBy/appLinkName/viewLinkName/fieldName/image/1750480844493820_Differential_Calculus.jpg" border = "0"></img>
                 	// 	user=User[ID==292239000000039007];
                 	// 	info user.Name;
                 	// 	info user.Email;
                 	// 	info user.Phone_Number;
                 	// 	info user.Address;
                 	// 	info user.Membership_Type;
                 	// 	info user.Current_Books_Count+"/"+user.Max_Book_Allowed;
                 }
			 }
		 }
		workflow
		{
		form
		{
			Set_Return_Date as "Set Return Date"
			{
				type =  form
				form = Borrow_Request
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											input.Return_Date = input.Request_Date.addDay(45);
						)
					}
				}

			}
			Set_Return_Date1 as "Set Return Date"
			{
				type =  form
				form = Borrow_Request
				record event = on add

				on user input of Request_Date
				{
					actions 
					{
						custom deluge script
						(
											input.Return_Date = input.Request_Date.addDay(45);
						)
					}
				}

			}
			Validate_Request_Date as "Validate Request Date"
			{
				type =  form
				form = Borrow_Request
				record event = on add

				on validate
				{
					actions 
					{
						custom deluge script
						(
											if(input.Request_Date < zoho.currentdate)
										{
											alert "Enter valid Request Date!";
											cancel submit;
										}
						)
					}
				}

			}
			Validate_Quantity as "Validate Quantity"
			{
				type =  form
				form = Book
				record event = on add

				on user input of Soft_Copy_Current_Quantity
				{
					actions 
					{
						custom deluge script
						(
											if(input.Soft_Copy_Current_Quantity < 0)
										{
											input.Soft_Copy_Current_Quantity = 0;
											alert "Enter vaid Quentity";
										}
						)
					}
				}

			}
			Set_Soft_Copy_Quantity as "Set Soft Copy Quantity"
			{
				type =  form
				form = Book
				record event = on add

				on user input of Soft_Copy_Total_Quantity
				{
					actions 
					{
						custom deluge script
						(
											input.Soft_Copy_Current_Quantity = input.Soft_Copy_Total_Quantity;
										disable Soft_Copy_Current_Quantity;
						)
					}
				}

			}
			Set_User as "Set User"
			{
				type =  form
				form = Borrow_Request
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											user = User[Email == zoho.loginuserid];
										input.User = user.ID;
						)
					}
				}

			}
			Validate_User as "Validate User"
			{
				type =  form
				form = Borrow_Request
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											user = User[Email == zoho.loginuserid];
										if(user.Current_Books_Count <= 0)
										{
											alert "You have reached your membership book limit. Please return a book before requesting a new one.";
											openUrl("#Page:Home_Page","same window");
										}
						)
					}
				}

			}
			Hide_Book_E_Copy as "Hide Book E Copy"
			{
				type =  form
				form = Book
				record event = on add

				field rules
				{
					actions 
					{
						hide E_Copy;
					}
				}

			}
			Hide_Show_Book_E_Copy_and as "Hide/Show Book E Copy and Total Quantity"
			{
				type =  form
				form = Book
				record event = on add or edit

				on user input of Available_Copy
				{
					actions 
					{
						custom deluge script
						(
											if(input.Available_Copy.contains("Soft Copy"))
										{
											show Soft_Copy_Total_Quantity;
											show E_Copy;
											hide Hard_Copy_Total_Quantity;
											if(input.Available_Copy.contains("Hard Copy"))
											{
												show Hard_Copy_Total_Quantity;
											}
										}
										else if(input.Available_Copy.contains("Hard Copy"))
										{
											show Hard_Copy_Total_Quantity;
											hide E_Copy;
											hide Soft_Copy_Total_Quantity;
										}
										else
										{
											hide Soft_Copy_Total_Quantity;
											hide Hard_Copy_Total_Quantity;
											hide E_Copy;
										}
						)
					}
				}

			}
			Set_Books_Max_Count as "Set Books Max Count"
			{
				type =  form
				form = User
				record event = on add or edit

				on user input of Membership_Type
				{
					actions 
					{
						custom deluge script
						(
											if("Elite Membership".equalsIgnoreCase(input.Membership_Type))
										{
											input.Max_Book_Allowed = 10;
										}
										else if("Ordinary Membership".equalsIgnoreCase(input.Membership_Type))
										{
											input.Max_Book_Allowed = 4;
										}
						)
					}
				}

			}
			Hide_Current_Count_Of_Boo as "Hide Current Count Of Books"
			{
				type =  form
				form = User
				record event = on add

				field rules
				{
					actions 
					{
						hide Current_Books_Count;
					}
				}

			}
			Disable_Max_Book_Count as "Disable Max Book Count"
			{
				type =  form
				form = User
				record event = on add or edit

				field rules
				{
					actions 
					{
						disable Max_Book_Allowed;
					}
				}

			}
			Hide_Status as "Hide Status"
			{
				type =  form
				form = Borrow_Request
				record event = on add or edit
					status = inactive

				field rules
				{
					actions 
					{
						hide Status;
					}
				}

			}
			Open_Admin_Approval as "Open Admin Approval"
			{
				type =  form
				form = Reason
				button = Cancel
				on click
				{
					actions 
					{
					on click
					(
						openUrl("#Report:Admin_Approval","same window");
					)
					}
				}
			}
			Request_Denied as "Request Denied"
			{
				type =  form
				form = Reason
				button = Submit
				on click
				{
					actions 
					{
					on click
					(
						if("Denied".equalsIgnoreCase(input.Status))
										{
											request = Borrow_Request[ID == input.Rec_Id];
											request.Status="Denied";
											user = User[ID == request.User];
											book = Book[ID == request.Book];
											message = "<head><style> body { font-family: Arial, sans-serif;color: #333; } .container { padding: 20px;border: 1px solid #e2e2e2;max-width: 600px;margin: auto;background-color: #fff4f4; } .header { background-color: #f44336;color: white;padding: 10px 20px;text-align: center;font-size: 20px;} .content { padding: 20px; } .footer {font-size: 12px;color: #888;text-align: center;padding-top: 10px; } </style>";
											message = message + "</head>";
											message = message + "<body>";
											message = message + "  <div class=\"container\">";
											message = message + "    <div class=\"header\">Book Request Denied</div>";
											message = message + "    <div class=\"content\">";
											message = message + "      <p>Dear " + user.Name + ",</p>";
											message = message + "      <p>We regret to inform you that your request for the book <strong>\"" + book.Title + ", </strong>Author: <strong>" + book.Author + "\"</strong> has been rejected by the admin.</p>";
											message = message + "      <p>Reason: " + input.Reason + ". You may contact the library staff for further clarification.</p>";
											message = message + "      <p>We appreciate your understanding.</p>";
											message = message + "      <p>Regards,<br>Library Team</p>";
											message = message + "    </div>";
											message = message + "    <div class=\"footer\">";
											message = message + "      Please do not reply to this email. For any queries, contact the library support team.";
											message = message + "    </div>";
											message = message + "  </div>";
											message = message + "</body>";
											sendmail
											[
												from :zoho.loginuserid
												to :user.Email
												subject :"Book(" + book.Title + ", Author: " + book.Author + ") Request Denied"
												message :message
											]
										}
					)
					}
				}
			}
			Renewal_Request_Denied as "Renewal Request Denied"
			{
				type =  form
				form = Reason
				button = Submit
				on click
				{
					actions 
					{
					on click
					(
						if("Renewal Denied".equalsIgnoreCase(input.Status))
										{
											request = Borrow_Request[ID == input.Rec_Id];
											request.Status="Renewal Denied";
											user = User[ID == request.User];
											book = Book[ID == request.Book];
											message = "<head><style> body { font-family: Arial, sans-serif;color: #333; } .container { padding: 20px;border: 1px solid #e2e2e2;max-width: 600px;margin: auto;background-color: #fff4f4; } .header { background-color: #f44336;color: white;padding: 10px 20px;text-align: center;font-size: 20px;} .content { padding: 20px; } .footer {font-size: 12px;color: #888;text-align: center;padding-top: 10px; } </style>";
											message = message + "</head>";
											message = message + "<body>";
											message = message + "  <div class=\"container\">";
											message = message + "    <div class=\"header\">Book Renewal Request Denied</div>";
											message = message + "    <div class=\"content\">";
											message = message + "      <p>Dear " + user.Name + ",</p>";
											message = message + "      <p>We regret to inform you that your renewal request for the book <strong>\"" + book.Title + ", </strong>Author: <strong>" + book.Author + "\"</strong> has been rejected by the admin.</p>";
											message = message + "      <p>Reason: " + input.Reason + ". You may contact the library staff for further clarification.</p>";
											message = message + "      <p>We appreciate your understanding.</p>";
											message = message + "      <p>Regards,<br>Library Team</p>";
											message = message + "    </div>";
											message = message + "    <div class=\"footer\">";
											message = message + "      Please do not reply to this email. For any queries, contact the library support team.";
											message = message + "    </div>";
											message = message + "  </div>";
											message = message + "</body>";
											sendmail
											[
												from :zoho.loginuserid
												to :user.Email
												subject :"Book(" + book.Title + ", Author: " + book.Author + ") Renewal Request Denied"
												message :message
											]
										}
					)
					}
				}
			}
			Hide_Rec_Id_and_Status as "Hide Rec_Id and Status"
			{
				type =  form
				form = Reason
				record event = on add

				field rules
				{
					actions 
					{
						hide Rec_Id,Status;
					}
				}

			}
			Open_Admin_Approval1 as "Open Admin Approval"
			{
				type =  form
				form = Reason
					status = inactive
				button = Submit
				on click
				{
					actions 
					{
					on click
					(
						openUrl("#Report:Admin_Approval","same window");
					)
					}
				}
			}
			Disable_Quantity as "Disable Quantity"
			{
				type =  form
				form = Book
				record event = on add

				field rules
				{
					actions 
					{
						disable Soft_Copy_Current_Quantity;
					}
				}

			}
			Hide_Current_Quantity as "Hide Current Quantity"
			{
				type =  form
				form = Book
				record event = on add or edit

				field rules
				{
					actions 
					{
						hide Hard_Copy_Current_Quantity,Soft_Copy_Current_Quantity;
					}
				}

			}
			Hide_Total_Quantity as "Hide Total Quantity"
			{
				type =  form
				form = Book
				record event = on add

				field rules
				{
					actions 
					{
						hide Hard_Copy_Total_Quantity,Soft_Copy_Total_Quantity;
					}
				}

			}
			Set_User_and_Books as "Set User and Books"
			{
				type =  form
				form = Return_Book
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											borrowed_book = Borrowed_Book[ID == input.Rec_Id];
										input.User = borrowed_book.User;
										input.Book = borrowed_book.Book;
						)
					}
				}

			}
			Disable_User_Books_and_Re as "Disable User, Books and Rec ID"
			{
				type =  form
				form = Return_Book
				record event = on add

				field rules
				{
					actions 
					{
						disable User,Book;
					}
					actions 
					{
						disable Return_Date;
					}
				}

			}
			Status_and_Book_Count_cha as "Status and Book Count change"
			{
				type =  form
				form = Return_Book
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											borrowed_book = Borrowed_Book[ID == input.Rec_Id];
										book = Book[ID == input.Book];
										borrowed_book.Status="Returned";
										if(input.Book_Type.equals("Hard Copy"))
										{
											book.Hard_Copy_Current_Quantity=book.Hard_Copy_Current_Quantity + 1;
										}
										else
										{
											book.Soft_Copy_Current_Quantity=book.Soft_Copy_Current_Quantity + 1;
										}
						)
					}
				}

			}
			Hide_Rec_Id as "Hide Rec Id"
			{
				type =  form
				form = Return_Book
				record event = on add or edit

				field rules
				{
					actions 
					{
						hide Rec_Id;
					}
				}

			}
			Set_Hard_Copy_Quantity as "Set Hard Copy Quantity"
			{
				type =  form
				form = Book
				record event = on add

				on user input of Hard_Copy_Total_Quantity
				{
					actions 
					{
						custom deluge script
						(
											input.Hard_Copy_Current_Quantity = input.Hard_Copy_Total_Quantity;
										disable Hard_Copy_Current_Quantity;
						)
					}
				}

			}
			Direct_to_Form_Properties as "Direct to - Form Properties"
			{
				type =  presuccess
				form = Borrow_Request
				on start
				{
					actions 
					{
						openURL("#Page:Home_Page","new window");
					}
				}
			}
			Direct_to_Form_Properties1 as "Direct to - Form Properties"
			{
				type =  presuccess
				form = Return_Book
				on start
				{
					actions 
					{
						openURL("#Report:My_Borrowed_Books","new window");
					}
				}
			}
			Validate_Book_Type as "Validate Book Type"
			{
				type =  form
				form = Borrow_Request
				record event = on add

				on user input of Book_Type
				{
					actions 
					{
						custom deluge script
						(
											book = Book[ID == input.Book];
										if("Soft Copy".equalsIgnoreCase(input.Book_Type))
										{
											if(!book.Available_Copy.contains("Soft Copy"))
											{
												alert "This book is only available in hard copy";
												input.Book_Type = "Hard Copy";
											}
										}
										else
										{
											if(!book.Available_Copy.contains("Hard Copy"))
											{
												alert "This book is only available in soft copy";
												input.Book_Type = "Soft Copy";
											}
										}
						)
					}
				}

			}
			Hide_Book_Type as "Hide Book Type"
			{
				type =  form
				form = Return_Book
				record event = on add

				field rules
				{
					actions 
					{
						hide Book_Type;
					}
				}

			}
			Hide_Renew_Date as "Hide  Renew Date"
			{
				type =  form
				form = Borrow_Request
				record event = on add or edit

				field rules
				{
				}

			}
		}

		schedule
		{
			_Before_Day_Reminder_Mail as "(Before Day) Reminder Mail for Book Return"
			{
				type =  schedule
				start = "2025-01-01 08:00:00"
				frequency = daily
				time zone = "Asia/Calcutta"
				on start
				{
					actions 
					{
					on load
					(
						borrowed_book = Borrowed_Book[Return_Date == zoho.currentdate.addDay(1)];
										//borrowed_book = Borrowed_Book [ User==292239000000030007 ];
										for each  each_book in borrowed_book
										{
											book = Book[ID == each_book.Book];
											user = User[ID == each_book.User];
											message = "Dear <strong>" + user.Name + "</strong>,<br><br>";
											message = message + "This is a friendly reminder that the book you borrowed from the library is <strong>due for return tomorrow</strong>, \"" + each_book.Return_Date + "\".<br><br>";
											message = message + "Book Title:  <strong>" + book.Title + "</strong><br>";
											message = message + "Book Author:  <strong>" + book.Author + "</strong><br>";
											message = message + "Borrowed On:  <strong>" + each_book.Borrowed_Date + "</strong><br>";
											message = message + "Due Date:  <strong>" + each_book.Return_Date + "</strong><br><br>";
											message = message + "We kindly request you to return the book by the due date to avoid any late fees and ensure availability for other members.<br><br>";
											message = message + "If you have any questions or need an extension, please feel free to contact us.<br><br>";
											message = message + "Thank you for your cooperation.<br><br>";
											message = message + "Best regards,<br>";
											message = message + "Library Team";
											sendmail
											[
												from :zoho.adminuserid
												to :user.Email
												subject :"Reminder: Book Return Due Tomorrow"
												message :message
											]
										}
					)
					}
				}
			}
			_Before_One_Week_Reminder as "(Before One Week) Reminder Mail for Book Return"
			{
				type =  schedule
				start = "2025-01-01 08:00:00"
				frequency = daily
				time zone = "Asia/Calcutta"
				on start
				{
					actions 
					{
					on load
					(
						borrowed_book = Borrowed_Book[Return_Date == zoho.currentdate.addDay(7)];
										//borrowed_book = Borrowed_Book [ User==292239000000030007 ];
										for each  each_book in borrowed_book
										{
											book = Book[ID == each_book.Book];
											user = User[ID == each_book.User];
											message = "Dear <strong>" + user.Name + "</strong>,<br><br>";
											message = message + "We hope you're enjoying your reading! This is a gentle reminder that the book you borrowed is <strong>due for return in one week</strong>, \" on " + each_book.Return_Date + "\".<br><br>";
											message = message + "Book Title:  <strong>" + book.Title + "</strong><br>";
											message = message + "Book Author:  <strong>" + book.Author + "</strong><br>";
											message = message + "Borrowed On:  <strong>" + each_book.Borrowed_Date + "</strong><br>";
											message = message + "Due Date:  <strong>" + each_book.Return_Date + "</strong><br><br>";
											message = message + "Should you have any questions or need assistance, please feel free to reach out.<br><br>";
											message = message + "<strong>Thank you and happy reading!</strong><br><br>";
											message = message + "Best regards,<br>";
											message = message + "Library Team";
											sendmail
											[
												from :zoho.adminuserid
												to :user.Email
												subject :"Upcoming Book Return Due in One Week"
												message :message
											]
										}
					)
					}
				}
			}
		}




		functions
		{
			Approve_Process as "Approve Process"
			{
				type =  functions
				form = Borrow_Request
				execution type = for each record	
				on start
				{
					actions 
					{
					on click
					(
						input.Status = "Approved";
										book = Book[ID == input.Book];
										if(input.Book_Type.equals("Hard Copy"))
										{
											book.Hard_Copy_Current_Quantity=book.Hard_Copy_Current_Quantity - 1;
										}
										else
										{
											book.Soft_Copy_Current_Quantity=book.Soft_Copy_Current_Quantity - 1;
										}
										user = User[ID == input.User];
										user.Current_Books_Count=user.Current_Books_Count - 1;
										response = insert into Borrowed_Book
										[
											Added_User=zoho.loginuser
											User=input.User
											Book=input.Book
											Book_Copy=book.E_Copy
											Borrowed_Date=input.Request_Date
											Return_Date=input.Return_Date
											Book_Type=input.Book_Type
											Status="Borrowed"
										];
										message = "<head><style> body { font-family: Arial, sans-serif;color: #333; } .container { padding: 20px;border: 1px solid #e2e2e2;max-width: 600px;margin: auto;background-color: #f9f9f9; } .header { background-color: #4CAF50;color: white;padding: 10px 20px;text-align: center;font-size: 20px; } .content { padding: 20px; } .footer { font-size: 12px;color: #888;text-align: center;padding-top: 10px; } </style></head>";
										message = message + "<body>";
										message = message + "  <div class=\"container\">";
										message = message + "    <div class=\"header\">Book Request Approved</div>";
										message = message + "    <div class=\"content\">";
										message = message + "      <p>Dear " + user.Name + ",</p>";
										message = message + "      <p>Your request for the book <strong>\"" + book.Title + ", </strong>Author: <strong>" + book.Author + "\"</strong> has been approved by the admin.</p>";
										message = message + "      <p>" + if(input.Book_Type.contains("Soft Copy"),"You can click the link to view the e-book: <a href=\"https://creatorapp.zoho.in/syngridss/library-management-system/#Report:My_Borrowed_Books\" target=\"_blank\">View e-Book</a>","You may now collect the book from the library desk at your convenience") + ".</p>";
										message = message + "      <p>Thank you for using our library services.</p>";
										message = message + "      <p>Regards,<br>Library Team</p>";
										message = message + "    </div>";
										message = message + "    <div class=\"footer\">";
										message = message + "      Please do not reply to this email. For any queries, contact the library support team.";
										message = message + "    </div>";
										message = message + "  </div>";
										message = message + "</body>";
										sendmail
										[
											from :zoho.loginuserid
											to :user.Email
											subject :"Book(" + book.Title + ", Author: " + book.Author + ") Request Approved"
											message :message
										]
					)
					}
				}
			}
			Deny_Process as "Deny Process"
			{
				type =  functions
				form = Borrow_Request
				execution type = for each record	
				on start
				{
					actions 
					{
					on click
					(
						openUrl("#Form:Reason?Status=Denied&Rec_Id=" + input.ID,"popup window");
					)
					}
				}
			}
			Open_Users_Borrowed_Book_ as "Open Users Borrowed Book Page"
			{
				type =  functions
				form = Borrow_Request
				execution type = for each record	
				on start
				{
					actions 
					{
					on click
					(
						openUrl("#Page:User_Book_History?User_ID=" + input.User,"popup window");
					)
					}
				}
			}
			Return_Book as "Return Book"
			{
				type =  functions
				form = Borrowed_Book
				execution type = for each record	
				on start
				{
					actions 
					{
					on click
					(
						openUrl("#Form:Return_Book?Rec_Id=" + input.ID + "&Book_Type=" + input.Book_Type,"popup window");
					)
					}
				}
			}
			On_Book_Renew as "On Book Renew"
			{
				type =  functions
				form = Borrowed_Book
				execution type = for each record	
				on start
				{
					actions 
					{
					on click
					(
						input.Status = "Renewal Request";
										book = Book[ID == input.Book];
										message = "<head><style>body { font-family: Arial, sans-serif; color: #333; line-height: 1.6; margin: 20px; background-color: #f4f7fb; } .container {max-width: 600px;padding: 20px; border-left: 5px solid #2a4d9b; border-radius: 8px; background-color: #ffffff; box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05); background-color: #f4f7fb; } h2 { color: #2a4d9b; } .footer {margin-top: 20px;font-size: 0.9em;color: #555; } </style></head>";
										message = message + "<body><div class=\"container\">";
										message = message + "<h2>Book Renewal Request</h2>";
										message = message + "<p>Dear Librarian,</p>";
										message = message + "<p>A user has requested to renewal the following borrowed book:</p>";
										message = message + "<ul><li>Title: <strong>" + book.Title + "</strong></li>";
										message = message + "<li>Author: <strong>" + book.Author + "</strong></li>";
										message = message + "<li>Borrower Name: <strong>" + input.User.Name + "</strong></li>";
										message = message + "<li>Current Due Date: <strong>" + input.Return_Date + "</strong></li></ul></br>";
										message = message + "<p>You can \"Approve/Reject\" using the link: <a href=\"https://creatorapp.zoho.in/syngridss/library-management-system/#Report:My_Borrowed_Books\"   target=\"_blank\">View Request</a></p></div></body>";
										sendmail
										[
											from :zoho.loginuserid
											to :zoho.adminuserid
											subject :"Book Renewal Request Notification"
											message :message
										]
					)
					}
				}
			}
			Renewal_Approved as "Renewal Approved"
			{
				type =  functions
				form = Borrowed_Book
				execution type = for each record	
				on start
				{
					actions 
					{
					on click
					(
						input.Status = "Renewal Approved";
										user = User[ID == input.User];
										book = Book[ID == input.Book];
										message = "<head><style> body { font-family: Arial, sans-serif;color: #333; } .container { padding: 20px;border: 1px solid #e2e2e2;max-width: 600px;margin: auto;background-color: #f9f9f9; } .header { background-color: #4CAF50;color: white;padding: 10px 20px;text-align: center;font-size: 20px; } .content { padding: 20px; } .footer { font-size: 12px;color: #888;text-align: center;padding-top: 10px; } </style></head>";
										message = message + "<body>";
										message = message + "  <div class=\"container\">";
										message = message + "    <div class=\"header\">Book Renewal Request Approved</div>";
										message = message + "    <div class=\"content\">";
										message = message + "      <p>Dear " + user.Name + ",</p>";
										message = message + "      <p>Your renewal request for the book <strong>\"" + book.Title + ", </strong>Author: <strong>" + book.Author + "\"</strong> has been approved by the admin.</p>";
										message = message + "      <p> You can click the link to view the e-book: <a href=\"https://creatorapp.zoho.in/syngridss/library-management-system/#Report:My_Borrowed_Books\" target=\"_blank\">View e-Book</a> </p>";
										message = message + "      <p>Thank you for using our library services.</p>";
										message = message + "      <p>Regards,<br>Library Team</p>";
										message = message + "    </div>";
										message = message + "    <div class=\"footer\">";
										message = message + "      Please do not reply to this email. For any queries, contact the library support team.";
										message = message + "    </div>";
										message = message + "  </div>";
										message = message + "</body>";
										sendmail
										[
											from :zoho.loginuserid
											to :user.Email
											subject :"Book(" + book.Title + ", Author: " + book.Author + ") Renewal Request Approved"
											message :message
										]
										input.Renewal_Date = zoho.currentdate;
										input.Return_Date = zoho.currentdate.addDay(45);
					)
					}
				}
			}
			Renewal_Denied as "Renewal Denied"
			{
				type =  functions
				form = Borrowed_Book
				execution type = for each record	
				on start
				{
					actions 
					{
					on click
					(
						openUrl("#Form:Reason?Status=Renewal Denied&Rec_Id=" + input.ID,"popup window");
					)
					}
				}
			}
		}
	}
	share_settings
	{
			"Read"
			{
				name = "Read"
				type = Users_Permissions
				permissions = {Chat:true, Predefined:true, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "This profile will have read permission for all components\n"
			}
			"Write"
			{
				name = "Write"
				type = Users_Permissions
				permissions = {Chat:true, Predefined:true, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "This profile will have write permission for all components\n"
			}
			"Developer"
			{
				name = "Developer"
				type = Developer
				permissions = {Chat:false, Predefined:true, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "Developer Profile\n"
			}
			"Administrator"
			{
				name = "Administrator"
				type = Users_Permissions
				permissions = {Chat:true, Predefined:true, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "This profile will have all the permissions.\n"
			}
			"Customer"
			{
				name = "Customer"
				type = Customer_Portal
				permissions = {Chat:false, Predefined:true, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "This is the default profile having only add and view permission.\n"
			}
			roles
			{
				"CEO"
				{
					description = "User belonging to this role can access data of all other users."
				}
			}
	}


	web
	{
		forms
		{
			form Book
			{
				label placement = left
			}
			form Borrow_Request
			{
				label placement = left
			}
			form Borrowed_Book
			{
				label placement = left
			}
			form Library_Details
			{
				label placement = left
			}
			form Reason
			{
				label placement = left
			}
			form Reminder
			{
				label placement = left
			}
			form Return_Book
			{
				label placement = left
			}
			form Return_Books
			{
				label placement = left
			}
			form User
			{
				label placement = left
			}
		}
		reports
		{
			report Borrow_Request_Report
			{
				quickview
				(
					layout
					(
		 				type = -1
						datablock1
						(
							layout type = -1
							fields
							(
								Borrow_Request_Id as "Borrow Request Id"
								Request_Date as "Request Date"
								Return_Date as "Return Date"
								Status
								Book_Type as "Book Type"
							)
						)
					)
					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Print 
    		 				Add 
    		 				Import 
    		 				Export 
    	 				)
						record
						(
							Edit   	   
							Duplicate   	   
							Delete   	   
							Print   	   
    					)
    				)
    				action
    				(
						on click
						(
							View Record   	   
    					)
						on right click
						(
							Edit   	   
							Duplicate   	   
							Delete   	   
							Print   	   
							View Record   	   
    					)
     				)
				)

				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
							layout type = -2
		     				title = "Overview"
							fields
							(
								Borrow_Request_Id as "Borrow Request Id"
								Request_Date as "Request Date"
								Return_Date as "Return Date"
								Status
								Book_Type as "Book Type"
							)
						)
						datablock2
						(
							layout type = -2
		     				title = "Book"
		     				related field = Book
							fields
							(
								Title
								Author
								Publisher
								Isbn
								Category
							)
						)
						datablock3
						(
							layout type = -2
		     				title = "User"
		     				related field = User
							fields
							(
								Name
								Email
								Phone_Number as "Phone Number"
								Address
							)
						)
					)
					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Print 
    	 				)
    				)
				)
			}
			report User_Report
			{
				quickview
				(
					layout
					(
		 				type = -1
						datablock1
						(
							layout type = -1
							fields
							(
								Name
								Email
								Phone_Number as "Phone Number"
								Address
								ID
								Current_Books_Count as "Current Books Count"
							)
						)
					)
					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Print 
    		 				Add 
    		 				Import 
    		 				Export 
    	 				)
						record
						(
							Edit   	   
							Duplicate   	   
							Delete   	   
							Print   	   
    					)
    				)
    				action
    				(
						on click
						(
							View Record   	   
    					)
						on right click
						(
							Edit   	   
							Duplicate   	   
							Delete   	   
							Print   	   
							View Record   	   
    					)
     				)
				)

				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
							layout type = -2
		     				title = "Overview"
							fields
							(
								Name
								Email
								Phone_Number as "Phone Number"
								Address
							)
						)
					)
					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Print 
    	 				)
    				)
				)
			}
			report User_Address
			{
				quickview
				(
					layout
					(
		 				type = 1
						datablock1
						(
							layout type = 1
							fields
							(
								Name
								Email
							)
						)
					)
					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Print 
    		 				Add 
    		 				Import 
    		 				Export 
    	 				)
						record
						(
							Edit   	   
							Duplicate   	   
							Delete   	   
							Print   	   
    					)
    				)
    				action
    				(
						on click
						(
							View Record   	   
    					)
						on right click
						(
							Edit   	   
							Duplicate   	   
							Delete   	   
							Print   	   
							View Record   	   
    					)
     				)
				)

				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
							layout type = -2
							fields
							(
								Name
								Email
								Phone_Number as "Phone Number"
								Address
							)
						)
					)
					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Print 
    	 				)
    				)
				)
			}
			report Reminder_Report
			{
				quickview
				(
					layout
					(
		 				type = -1
						datablock1
						(
							layout type = -1
							fields
							(
								Borrow_Request as "Borrow Request"
								Reminder_Date as "Reminder Date"
							)
						)
					)
					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Print 
    		 				Add 
    		 				Import 
    		 				Export 
    	 				)
						record
						(
							Edit   	   
							Duplicate   	   
							Delete   	   
							Print   	   
    					)
    				)
    				action
    				(
						on click
						(
							View Record   	   
    					)
						on right click
						(
							Edit   	   
							Duplicate   	   
							Delete   	   
							Print   	   
							View Record   	   
    					)
     				)
				)

				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
							layout type = -2
		     				title = "Overview"
							fields
							(
								Borrow_Request as "Borrow Request"
								Reminder_Date as "Reminder Date"
							)
						)
						datablock2
						(
							layout type = -2
		     				title = "Borrow Request"
		     				related field = Borrow_Request
							fields
							(
								Borrow_Request_Id as "Borrow Request Id"
								User
								Book
							)
						)
					)
					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Print 
    	 				)
    				)
				)
			}
			report Book_Report
			{
				quickview
				(
					layout
					(
		 				type = -1
						datablock1
						(
							layout type = -1
							fields
							(
								Title
								Author
								Available_Copy as "Available Copy"
								Isbn
								Category
								Hard_Copy_Current_Quantity as "Hard Copy Current Quantity"
								Hard_Copy_Total_Quantity as "Hard Copy Total Quantity"
								Soft_Copy_Current_Quantity as "Soft Copy Current Quantity"
								Soft_Copy_Total_Quantity as "Soft Copy Total Quantity"
								Book_Section as "Book Section"
								Publisher
								Image
								Language1 as "Language"
								Rac_Number as "Rac Number"
							)
						)
					)
					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Print 
    		 				Add 
    		 				Import 
    		 				Export 
    	 				)
						record
						(
							Edit   	   
							Duplicate   	   
							Delete   	   
							Print   	   
    					)
    				)
    				action
    				(
						on click
						(
							View Record   	   
    					)
						on right click
						(
							Edit   	   
							Duplicate   	   
							Delete   	   
							Print   	   
							View Record   	   
    					)
     				)
				)

				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
							layout type = -2
		     				title = "Overview"
							fields
							(
								Title
								Author
								Publisher
								Isbn
								Category
								Soft_Copy_Current_Quantity as "Soft Copy Current Quantity"
								Price
							)
						)
					)
					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Print 
    	 				)
    				)
				)
			}
			report Book_by_Category
			{
				quickview
				(
					layout
					(
		 				type = 1
						datablock1
						(
							layout type = 1
							fields
							(
								Title
								Author
							)
						)
					)
					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Print 
    		 				Add 
    		 				Import 
    		 				Export 
    	 				)
						record
						(
							Edit   	   
							Duplicate   	   
							Delete   	   
							Print   	   
    					)
    				)
    				action
    				(
						on click
						(
							View Record   	   
    					)
						on right click
						(
							Edit   	   
							Duplicate   	   
							Delete   	   
							Print   	   
							View Record   	   
    					)
     				)
				)

				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
							layout type = -2
							fields
							(
								Title
								Author
								Publisher
								Isbn
								Category
								Soft_Copy_Current_Quantity as "Soft Copy Current Quantity"
								Price
							)
						)
					)
					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Print 
    	 				)
    				)
				)
			}
			report My_Borrowed_Books
			{
				quickview
				(
					layout
					(
		 				type = -1
						datablock1
						(
							layout type = -1
							fields
							(
								User
								Book
								Book_Copy as "Book Copy"
								Borrowed_Date as "Borrowed Date"
								Return_Date as "Return Date"
								"Return Book"
								"Book Renew"
								Status
							)
						)
					)
					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
						record
						(
							Edit   	   
							Duplicate   	   
							Delete   	   
    					)
    				)
    				action
    				(
						on click
						(
							View Record   	   
    					)
						on right click
						(
							Edit   	   
							Delete   	   
							Duplicate   	   
							View Record   	   
    					)
     				)
				)

				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
							layout type = -2
							fields
							(
								User
								Book
								Book_Copy as "Book Copy"
								Borrowed_Date as "Borrowed Date"
								Return_Date as "Return Date"
								Renewal_Date as "Renewal Date"
								Book_Type as "Book Type"
								Status
							)
						)
					)
					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
    				)
				)
			}
			report Borrow_Request_Approval
			{
				quickview
				(
					layout
					(
		 				type = -1
						datablock1
						(
							layout type = -1
							fields
							(
								"Approve"
								"Deny"
								User
								"View User Borrowed Books"
								Borrow_Request_Id as "Borrow Request Id"
								Book
								Request_Date as "Request Date"
								Return_Date as "Return Date"
								Status
								Book_Type as "Book Type"
							)
						)
					)
					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
						record
						(
							Edit   	   
							Duplicate   	   
							Delete   	   
    					)
    				)
    				action
    				(
						on click
						(
							View Record   	   
    					)
						on right click
						(
							Edit   	   
							Delete   	   
							Duplicate   	   
							View Record   	   
    					)
     				)
				)

				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
							layout type = -2
							fields
							(
								Borrow_Request_Id as "Borrow Request Id"
								User
								Book
								Request_Date as "Request Date"
								Return_Date as "Return Date"
								"Approve"
								"Deny"
							)
						)
					)
					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
    				)
				)
			}
			report All_Return_Books
			{
				quickview
				(
					layout
					(
		 				type = -1
						datablock1
						(
							layout type = -1
							fields
							(
								User
								Book
								Rec_Id as "Rec Id"
								Return_Date as "Return Date"
								Book_Type as "Book Type"
							)
						)
					)
					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
						record
						(
							Edit   	   
							Duplicate   	   
							Delete   	   
    					)
    				)
    				action
    				(
						on click
						(
							View Record   	   
    					)
						on right click
						(
							Edit   	   
							Delete   	   
							Duplicate   	   
							View Record   	   
    					)
     				)
				)

				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
							layout type = -2
							fields
							(
								User
								Book
								Rec_Id as "Rec Id"
								Return_Date as "Return Date"
								Book_Type as "Book Type"
							)
						)
					)
					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
    				)
				)
			}
			report Book_Renewal_Approval
			{
				quickview
				(
					layout
					(
		 				type = -1
						datablock1
						(
							layout type = -1
							fields
							(
								"Approve"
								"Deny"
								User
								Book
								Borrowed_Date as "Borrowed Date"
								Return_Date as "Return Date"
								Book_Type as "Book Type"
								Status
							)
						)
					)
					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
						record
						(
							Edit   	   
							Duplicate   	   
							Delete   	   
    					)
    				)
    				action
    				(
						on click
						(
							View Record   	   
    					)
						on right click
						(
							Edit   	   
							Delete   	   
							Duplicate   	   
							View Record   	   
    					)
     				)
				)

				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
							layout type = -2
							fields
							(
								User
								Book
								Book_Copy as "Book Copy"
								Borrowed_Date as "Borrowed Date"
								Return_Date as "Return Date"
								Renewal_Date as "Renewal Date"
								Book_Type as "Book Type"
								Status
							)
						)
					)
					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
    				)
				)
			}
			report Library_Details1
			{
				quickview
				(
					layout
					(
		 				type = -2
	     				recordsperrow = 2
						datablock1
						(
							layout type = -2
							fields
							(
								Library_Name as "Library Name"
								Address
								Website
								Phone_Number as "Phone"
								Email
							)
						)
					)
					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
						record
						(
							Edit   	   
							Duplicate   	   
							Delete   	   
    					)
    				)
    				action
    				(
						on click
						(
							View Record   	   
    					)
						on right click
						(
							Edit   	   
							Delete   	   
							Duplicate   	   
							View Record   	   
    					)
     				)
				)

				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
							layout type = -2
							fields
							(
								Library_Name as "Library Name"
								Address
								Website
								Phone_Number as "Phone"
								Email
							)
						)
					)
					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
    				)
				)
			}
			report Histroy
			{
				quickview
				(
					layout
					(
		 				type = -1
						datablock1
						(
							layout type = -1
							fields
							(
								User
								Book
								Borrowed_Date as "Borrowed Date"
								Renewal_Date as "Renewal Date"
								Return_Date as "Return Date"
								Book_Type as "Book Type"
								Status
							)
						)
					)
					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
						record
						(
							Edit   	   
							Duplicate   	   
							Delete   	   
    					)
    				)
    				action
    				(
						on click
						(
							View Record   	   
    					)
						on right click
						(
							Edit   	   
							Delete   	   
							Duplicate   	   
							View Record   	   
    					)
     				)
				)

				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
							layout type = -2
							fields
							(
								User
								Book
								Book_Copy as "Book Copy"
								Borrowed_Date as "Borrowed Date"
								Return_Date as "Return Date"
								Renewal_Date as "Renewal Date"
								Book_Type as "Book Type"
								Status
							)
						)
					)
					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
    				)
				)
			}
			report My_Borrow_Request
			{
				quickview
				(
					layout
					(
		 				type = -1
						datablock1
						(
							layout type = -1
							fields
							(
								Borrow_Request_Id as "Borrow Request Id"
								Book
								Request_Date as "Request Date"
								Return_Date as "Return Date"
								Book_Type as "Book Type"
								Status
							)
						)
					)
					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
						record
						(
							Edit   	   
							Duplicate   	   
							Delete   	   
    					)
    				)
    				action
    				(
						on click
						(
							View Record   	   
    					)
						on right click
						(
							Edit   	   
							Delete   	   
							Duplicate   	   
							View Record   	   
    					)
     				)
				)

				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
							layout type = -2
							fields
							(
								Borrow_Request_Id as "Borrow Request Id"
								User
								Book
								Request_Date as "Request Date"
								Return_Date as "Return Date"
								Book_Type as "Book Type"
								Status
								Notes
							)
						)
					)
					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
    				)
				)
			}
		}
		menu
		{
			unused
			{
				form  Return_Books
				{
					icon = "tech-desktop"
				}
				page Book_Popup
				{
					icon = "education-book-open"
				}
				page User_Book_History
				{
					icon = "education-book-open"
				}
				form  Library_Details
				{
					icon = "business-books"
				}
				section SharedAnalytics_Section
				{
					type = shared_user_report_section
					displayname = "Reports"
					icon = "business-chart-bar-33"
				}
			}
			space Space
			{
				displayname = "Space"
				icon = "objects-spaceship"

				section Pages
				{
					displayname = "Pages"
					icon = "ui-1-dashboard-half"
					page Home_Page
					{
						icon = "design-design-dev"
					}
					page All_Books
					{
						icon = "education-books-46"
					}
					page Show_by_Section
					{
						icon = "media-1-button-power"
					}
					page Show_by_Section_Books
					{
						icon = "education-book-open"
					}
					page DashBoard
					{
						icon = "ui-1-dashboard-half"
					}
					page test
					{
						icon = "education-flask"
					}
				}
				section Admin_Approval
				{
					displayname = "Admin Approval"
					icon = "users-2-child"
					report Borrow_Request_Approval
					{
						icon = "business-money-12"
					}
					report Book_Renewal_Approval
					{
						icon = "education-book-open"
					}
				}
				section Section_2
				{
					displayname = "Borrow Requests"
					icon = "business-money-12"
					form  Borrow_Request
					{
						icon = "ui-1-bold-add"
					}
					report Borrow_Request_Report
					{
						icon = "business-money-bag"
					}
					report My_Borrow_Request
					{
						icon = "business-money-12"
					}
				}
				section Section_5
				{
					displayname = "Users"
					icon = "users-2-woman"
					form  User
					{
						icon = "ui-1-bold-add"
					}
					report User_Report
					{
						icon = "users-2-woman"
					}
					report User_Address
					{
						icon = "location-pin"
					}
				}
				section Section_7
				{
					displayname = "Books"
					icon = "education-books-46"
					form  Book
					{
						icon = "ui-1-bold-add"
					}
					report Book_Report
					{
						icon = "education-books-46"
					}
					report Book_by_Category
					{
						icon = "design-2-selection"
					}
				}
				section Borrowed_Books
				{
					displayname = "Borrowed Books"
					icon = "education-books-46"
					form  Borrowed_Book
					{
						icon = "education-book-open"
					}
					report My_Borrowed_Books
					{
						icon = "tech-desktop"
					}
				}
				section Return_Books1
				{
					displayname = "Return Books"
					icon = "education-books-46"
					form  Return_Book
					{
						icon = "education-book-open"
					}
					report All_Return_Books
					{
						icon = "tech-desktop"
					}
				}
				section Section_3
				{
					displayname = "Histories"
					icon = "tech-desktop"
					report Histroy
					{
						icon = "education-book-open"
					}
				}
				section Section_6
				{
					displayname = "Reminders"
					icon = "tech-desktop"
					form  Reminder
					{
						icon = "ui-1-bold-add"
					}
					report Reminder_Report
					{
						icon = "travel-world"
					}
				}
				section Library_Details
				{
					displayname = "Library Details"
					icon = "business-books"
					report Library_Details1
					{
						icon = "tech-desktop"
					}
					form  Reason
					{
						icon = "tech-desktop"
					}
				}
				section ZC_Approvals
				{
					displayname = "Approvals"
					icon = "ui-2-hourglass"
					systemcomponent
					{
						type = approval
						approval status = pending
						displayname = "Pending Tasks"
						icon = "ui-2-hourglass"
					}
					systemcomponent
					{
						type = approval
						approval status = completed
						displayname = "Completed Tasks"
						icon = "design-todo"
					}
				}
				section ZC_App_Preferences
				{
					displayname = "App Preferences"
					icon = "design-app"
					systemcomponent
					{
						type = localization
						displayname = "Language Selection"
						icon = "education-language"
					}
					systemcomponent
					{
						type = connection
						displayname = "Connection"
						icon = "tech-2-connection"
					}
				}
			}
			preference
			{
				icon
				{
					style = solid
					show = {space,section,component}
				}
			}
		}
		customize
		{
			new theme = 4
			font = "poppins"
			color options
			{
				color = green
			}
			logo
			{
				preference = "app_icon"
				placement = "left"
			}
		}
	}
	phone
	{
		forms
		{
			form Book
			{
				label placement = auto
			}
			form Borrow_Request
			{
				label placement = auto
			}
			form Borrowed_Book
			{
				label placement = auto
			}
			form Library_Details
			{
				label placement = auto
			}
			form Reason
			{
				label placement = auto
			}
			form Reminder
			{
				label placement = auto
			}
			form Return_Book
			{
				label placement = auto
			}
			form Return_Books
			{
				label placement = auto
			}
			form User
			{
				label placement = auto
			}
		}
		customize
		{
			layout = slidingpane
			font = "default"
			style = "3"
			color options
			{
				menu color = "#ffffff"
				header color = "#ffffff"
				name = "custom_color"
				brand color = "#ffffff"
				type = "custom"
				sub menu color = "#ffffff"
				secondaryColor = "#ffffff"
			}
			logo
			{
				preference = "none"
			}
		}
	}
	tablet
	{
		forms
		{
			form Book
			{
				label placement = auto
			}
			form Borrow_Request
			{
				label placement = auto
			}
			form Borrowed_Book
			{
				label placement = auto
			}
			form Library_Details
			{
				label placement = auto
			}
			form Reason
			{
				label placement = auto
			}
			form Reminder
			{
				label placement = auto
			}
			form Return_Book
			{
				label placement = auto
			}
			form Return_Books
			{
				label placement = auto
			}
			form User
			{
				label placement = auto
			}
		}
		customize
		{
			layout = slidingpane
			font = "default"
			style = "3"
			color options
			{
				menu color = "#ffffff"
				header color = "#ffffff"
				name = "custom_color"
				brand color = "#ffffff"
				type = "custom"
				sub menu color = "#ffffff"
				secondaryColor = "#ffffff"
			}
			logo
			{
				preference = "none"
			}
		}
	}
	translation
{
{"Language_Settings":{"LANGAGUE_WITH_LOGIN":"browser"}}
}
}
