/*
 * Author       : rocksakthi755778
 * Generated on : 18-Nov-2024 10:44:14
 * Version      : 1.0
 */
 application "Restaurant Reservation and Order Management System"
 {
 	date format = "dd-MMM-yyyy"
 	time zone = "Asia/Kolkata"
 	time format = "24-hr"
 	section Home
	{
		icon = "users-2-home"
		page Home
		{
			displayname = "Home"
			icon = "users-2-home"
			Content="<zml    \t\t\n\t\t\n\t\t\tbgColor='#d98d8d'\n\t\t\n\t\t\n\t\t\n>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<dsp id='html_snippet' elementName=\"HTML Header Menu\"\n bgColor=\"#FFFFFF\" \n>\n\t<![CDATA[htmlpage html_snippet()\ncontent\n&lt;%{\n\t%&gt;\n&lt;div class=&quot;food-image-holder&quot;&gt;\n\t&lt;img class=&quot;food&quot; src=&quot;https:\/\/www.thevellorekitchen.in\/wp-content\/uploads\/2023\/01\/Hyderabadi-Chicken-Briyani.jpg&quot; alt=&quot;Hyderabadi Chicken Briyani Image&quot;&gt; \n\t&lt;img class=&quot;food&quot; src=&quot;https:\/\/www.yummytummyaarthi.com\/wp-content\/uploads\/2021\/12\/1-1024x682.jpg&quot; alt=&quot;Panner Butter Masala Image&quot;&gt;\n\t&lt;img class=&quot;food&quot; src=&quot;https:\/\/sukhis.com\/app\/uploads\/2022\/09\/image3-5-900x601-1.jpg&quot; alt=&quot;Dosa Image&quot;&gt;\n\t&lt;img class=&quot;food&quot; src=&quot;https:\/\/butfirstchai.com\/wp-content\/uploads\/2023\/01\/chicken-chettinad-gravy-2.jpg&quot; alt=&quot;Chettinadu Chicken Gravy Image&quot;&gt;\n&lt;\/div&gt;\n &lt;style&gt;\n \t.food-image-holder {\n            height: 160px;\n            margin: 0;\n            display: flex;\n            justify-content: space-around;\n\t\t\talign-items: center;     \n\t\t\t}\n        .food {\n\t\t\tborder-radius:10px;\n            width: 20%;\n            height: 90%;\n        }\n    &lt;\/style&gt;\n&lt;%\n\n}%&gt;]]>\n<\/dsp>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"24%\"\n   \t>\n\t<dsp id='html_snippet1' elementName=\"HTML Left Portrait Image\"\n bgColor=\"#FFFFFF\" \n>\n\t<![CDATA[htmlpage html_snippet1()\ncontent\n&lt;%{\n\t%&gt;\n&lt;div class=&quot;form-side-imgage-holder&quot;&gt;\n\t&lt;img class=&quot;form-side-imgage&quot; src=&quot;https:\/\/theglossarymagazine.com\/wp-content\/uploads\/Portrait-Starter-Selection.webp&quot; alt=&quot;Food Portrait&quot;&gt;\n&lt;\/div&gt;\n&lt;style&gt;\n \t.form-side-imgage-holder {\n\t\theight: 350px; \n\t\twidth: auto; \n\t\toverflow: hidden; \n\t}\n\t.form-side-imgage {\n\t\theight: 100%;\n\t\twidth: 100%;\n\t\tobject-fit: cover; \n\t}\n&lt;\/style&gt;\n&lt;%\n\n}%&gt;]]>\n<\/dsp>\n<\/column><column\n   \t\t width=\"52%\"\n   \t>\n\t<form \n\telementName=\"Form\"\n\n\tappLinkName = 'thisapp'\n\tlinkName = 'Book_Table'\n\theightType = 'auto'\n\turlType = 'none'\n\tzc_Header = 'false'\n\/> \n<\/column><column\n   \t\t width=\"24%\"\n   \t>\n\t<dsp id='html_snippet2' elementName=\"HTML Right  Portrait Image\"\n bgColor=\"#FFFFFF\" \n>\n\t<![CDATA[htmlpage html_snippet2()\ncontent\n&lt;%{\n\t%&gt;\n&lt;div class=&quot;form-side-imgage-holder&quot;&gt;\n\t&lt;img class=&quot;form-side-imgage&quot; src=&quot;https:\/\/img.freepik.com\/premium-photo\/portrait-waitress-serving-food-customers-busy-bar-restaurant_662214-392531.jpg?w=360&quot; alt=&quot;Food Portrait&quot;&gt;\n&lt;\/div&gt;\n&lt;style&gt;\n \t.form-side-imgage-holder {\n\t\theight: 350px; \n\t\twidth: auto; \n\t\toverflow: hidden; \n\t}\n\t.form-side-imgage {\n\t\theight: 100%;\n\t\twidth: 100%;\n\t\tobject-fit: cover; \n\t}\n&lt;\/style&gt;\n&lt;%\n\n}%&gt;]]>\n<\/dsp>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<dsp id='html_snippet10' elementName=\"HTML Daily Quotes\"\n bgColor=\"#FFFFFF\" \n>\n\t<![CDATA[htmlpage html_snippet10()\ncontent\n&lt;%{\n\t%&gt;\n&lt;div class=&quot;quotes-holder&quot;&gt;\n&lt;p id=&quot;info&quot;&gt;Quotes - Happiness :) &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;\/p&gt;\n\t&lt;p&gt;&lt;%=thisapp.Get_Daily_Quotes()%&gt;&lt;\/p&gt;\n&lt;\/div&gt;\n&lt;style&gt;\n\t.quotes-holder{\n\t\theight:auto;\n\t\twidth:100%;\n\t\tdisplay:flex;\n\t\tjustify-content:center;\n\t}\n\t#info{\n  \t\tleft: 10px;\n\t\tfont-weight: bold;\n  \t\tcolor: red;\n\t}\n&lt;\/style&gt;\n&lt;%\n\n}%&gt;]]>\n<\/dsp>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>"
		}
		page Viwe_Table(string Selected_Date_Time, int Selected_Number_Guests)
		{
			displayname = "Viwe Table"
			icon = "furniture-table"
			Content="<zml    \t\t\n\t\t\n\t\t\tbgColor='#d98d8d'\n\t\t\n\t\t\n\t\t\n>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<dsp id='html_snippet3' elementName=\"HTML Restaurant Table View\"\n bgColor=\"#FFFFFF\" \n>\n\t<![CDATA[htmlpage html_snippet3()\ncontent\n&lt;%{\n\tnon_ac_tables = Table[AC_or_Non_AC == &quot;Non A\/C&quot;];\n\tac_tables = Table[AC_or_Non_AC == &quot;A\/C&quot;];\n\t%&gt;\n&lt;link rel=&quot;stylesheet&quot; href=&quot;https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/font-awesome\/6.5.0\/css\/all.min.css&quot;&gt;\n&lt;div class=&quot;restaurant-layout&quot;&gt;\n\n\t&lt;div class=&quot;window-section&quot;&gt;\n        &lt;div class=&quot;window&quot;&gt;Window&lt;\/div&gt;\n    &lt;\/div&gt;\n\t\n\t&lt;div class=&quot;table-section&quot;&gt;\n\t\t&lt;div class=&quot;table-holder ac-section&quot;&gt;\n&lt;%\n\tfor each  ac_table in ac_tables\n\t{\n\t\t%&gt;\n&lt;a href=&quot;#Page:On_Reservation?Table_Id=&lt;%=ac_table.Table_Id%&gt;&quot; class=&quot;table ac-table&quot; id=&lt;%=ac_table.Table_Id%&gt; &gt;\n        \t\t&lt;h3&gt;Table No: &lt;%=ac_table.Table_Id%&gt; &lt;\/h3&gt;\n        \t\t&lt;p&gt;Capacity: &lt;%=ac_table.Seating_Capacity%&gt; &lt;\/p&gt;\n&lt;\/a&gt;\n&lt;%\n\t\tif(input.Selected_Date_Time == ac_table.Table_Booking_Date_Time.toString(&quot;dd-MM-yyyy hh:mm:ss&quot;) || ac_table.Seating_Capacity &lt; input.Selected_Number_Guests)\n\t\t{\n\t\t\t%&gt;\n&lt;style&gt;\n\t\t#&lt;%=ac_table.Table_Id%&gt;{\n\t\t\t pointer-events: none;\n        \t background-color: gray;\n\t\t}&lt;\/style&gt;\n&lt;%\n\t\t}\n\t}\n\t%&gt;\n&lt;\/div&gt;\n\t\t\n\t\t&lt;div class=&quot;table-holder non-ac-section&quot;&gt;\n&lt;%\n\tfor each  non_ac_table in non_ac_tables\n\t{\n\t\t%&gt;\n&lt;a href=&quot;#Page:On_Reservation?Table_Id=&lt;%=non_ac_table.Table_Id%&gt;&quot; class=&quot;table non-ac-table&quot; id=&lt;%=non_ac_table.Table_Id%&gt; &gt;\n    &lt;h3&gt;Table No: &lt;%=non_ac_table.Table_Id%&gt; &lt;\/h3&gt;\n    &lt;p&gt;Capacity: &lt;%=non_ac_table.Seating_Capacity%&gt; &lt;\/p&gt;\n&lt;\/a&gt;\n&lt;%\n\t\tif(input.Selected_Date_Time == non_ac_table.Table_Booking_Date_Time.toString(&quot;dd-MM-yyyy hh:mm:ss&quot;) || non_ac_table.Seating_Capacity &lt; input.Selected_Number_Guests)\n\t\t{\n\t\t\t%&gt;\n&lt;style&gt;\n\t\t#&lt;%=non_ac_table.Table_Id%&gt;{\n\t\t\t pointer-events: none;\n        \t background-color: gray;\n\t\t}&lt;\/style&gt;\n&lt;%\n\t\t}\n\t}\n\t%&gt;\n&lt;\/div&gt;\n&lt;div class=&quot;information-section&quot; &gt;\n\t&lt;i class=&quot;fa-solid fa-square fa-xl&quot; style=&quot;color: #007bff;&quot;&gt;&lt;\/i&gt;-A\/c &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;\n\t&lt;i class=&quot;fa-solid fa-square fa-xl&quot; style=&quot;color: #25b32b;&quot;&gt;&lt;\/i&gt;-Non A\/C &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;\n\t&lt;i class=&quot;fa-solid fa-square fa-xl&quot; style=&quot;color: gray;&quot;&gt;&lt;\/i&gt;-Does Not Satisfy Your Requrments\n&lt;\/div&gt;\n    &lt;\/div&gt;\n\t&lt;div class=&quot;door-section&quot;&gt;\n        &lt;div class=&quot;door&quot;&gt;Door&lt;\/div&gt;\n    &lt;\/div&gt;\n&lt;\/div&gt;\n\n\t\n&lt;style&gt;\n        .restaurant-layout {\n            display: grid;\n            grid-template-columns: 1fr 6fr 1fr; \n            grid-template-rows: 1fr; \n            height: 90vh;\n            gap: 5px;\n\t\t\t background-color: #d98d8d;\n        }\n\n        .window-section {\n            background-color: #e0f7fa; \n            display: flex;\n            justify-content: center;\n            align-items: center;\n            border: 2px solid #00796b;\n        }\n        .window {\n            width: 80%;\n            height: 80%;\n            background-color: #ffffff;\n            border: 5px solid #00796b;\n        }\n\t\t\n        .table-section {\n\t\t\tdisplay:flex;\n\t\t\tflex-direction:column;\n\t\t\tjustify-content: space-around;\n\t\t\talign-items:center;\n        }\n\t\t.table-holder{\n\t\t\theight:42%;\n\t\t\twidth:95%;\n\t\t\tdisplay: grid;\n            grid-template-columns: repeat(3, 1fr); \/* 3 columns of tables *\/\n            gap: 5px;\n            padding: 10px;\n\t\t}\n\t\t.ac-section{\n\t\t\tbackground-color: #e0e1fa; \/* Light blue *\/\n            border: 3px solid #0c2087;\n\t\t}\n\t\t.non-ac-section{\n\t\t\tbackground-color: #e0fae0; \/* Light green *\/\n            border: 3px solid #0c870e;\n\t\t}\n\t\t.information-section{\n\t\t\theight:4%;\n\t\t\twidth:95%;\n\t\t\tdisplay: flex;\n            justify-content: center;\n            align-items: center;\n\t\t\tbackground-color: #faf3e0; \/* Light yellow *\/\n            border: 3px solid #87830c;\n\t\t}\n\t\t\n        .door-section {\n            background-color: #ffebee; \/* Light red *\/\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            border: 2px solid #d32f2f;\n        }\n\n        .door {\n            width: 50%;\n            height: 50%;\n            background-color: #ffffff;\n            border: 5px solid #d32f2f;\n        }\n\n        .table {\n            width: 80%;\n            height: 100px;\n            display: flex;\n\t\t\tmargin-left: 20px;\n\t\t\tflex-direction:column;\n            justify-content: center;\n            align-items: center;\n            text-align: center;\n            border-radius: 8px;\n            color: white;\n            font-weight: bold;\n        }\n\n        .ac-table {\n            background-color: #007bff; \/* Blue for A\/C tables *\/\n        }\n\t\t.ac-table:hover {\n\t\t\tcursor: pointer;\n            background-color: #013975; \/* Blue for A\/C tables *\/\n        }\n\n        .non-ac-table {\n            background-color: #25b32b; \/* Green for Non A\/C tables *\/\n        }\n\t\t.non-ac-table:hover {\n\t\t\tcursor: pointer;\n            background-color: #018207; \/* Green for Non A\/C tables *\/\n        }\n&lt;\/style&gt;\n&lt;%\n\n}%&gt;]]>\n<\/dsp>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>"
			script
			{
				/* Write your script logic here. You can assign values to the page variables you've created in the previous tab. Enter 'input.' to list the created page variables. */
				if(input.Selected_Date_Time == null || input.Selected_Date_Time == "" || input.Selected_Date_Time.toDateTime("dd-MM-yyyy hh:mm:ss") < zoho.currenttime)
				{
					openUrl("#Page:Home","same window");
				}
				else if(input.Selected_Number_Guests == null || input.Selected_Number_Guests < 0)
				{
					openUrl("#Page:Home","same window");
				}
			}
		}
		page Order_Food(string Reservation_Id1)
		{
			displayname = "Order Food"
			icon = "furniture-fridge"
			Content="<zml    \t\t\n\t\t\n\t\t\tbgColor='#d98d8d'\n\t\t\n\t\t\n\t\t\n>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"50%\"\n   \t>\n\t<dsp id='html_snippet4' elementName=\"HTML Menu Image\"\n bgColor=\"#FFFFFF\" \n>\n\t<![CDATA[htmlpage html_snippet4()\ncontent\n&lt;%{\n\t%&gt;\n&lt;div class=&quot;menu-imgage-holder&quot;&gt;\n\t&lt;img class=&quot;menu-imgage&quot; src=&quot;https:\/\/b.zmtcdn.com\/data\/menus\/061\/92061\/897e1f5886f5a894ec4718ec08a76eaa.jpg&quot; alt=&quot;Food Portrait&quot;&gt;\n&lt;\/div&gt;\n&lt;style&gt;\n \t.menu-imgage-holder {\n\t\theight: auto; \n\t\twidth: auto; \n\t\toverflow: hidden; \n\t}\n\t.menu-imgage {\n\t\theight: 100%;\n\t\twidth: 100%;\n\t\tobject-fit: cover; \n\t}\n&lt;\/style&gt;\n&lt;%\n\n}%&gt;]]>\n<\/dsp>\n<\/column><column\n   \t\t width=\"50%\"\n   \t>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<dsp id='html_snippet8' elementName=\"HTML Menu Logo\"\n bgColor=\"#FFFFFF\" \n>\n\t<![CDATA[htmlpage html_snippet8()\ncontent\n&lt;%{\n\t%&gt;\n&lt;div class=&quot;menu-logo-holder&quot;&gt;\n\t&lt;img class=&quot;menu-logo&quot; src=&quot;https:\/\/img.freepik.com\/premium-vector\/food-menu-food-recipe-logo-design-template-spoon-fork-with-old-paper-scroll-vintage-vector_567423-1075.jpg&quot; alt=&quot;Food Portrait&quot;&gt;\n&lt;\/div&gt;\n&lt;style&gt;\n \t.menu-logo-holder {\n\t\theight: 17vh; \n\t\twidth: auto; \n\t\tdisplay: flex;\n  \t\talign-items: center;\n\t\tjustify-content: center; \n\t}\n\t.menu-logo {\n\t\theight: auto;\n\t\tmargin-top:12%;\n\t\twidth: 50%;\n\t}\n&lt;\/style&gt;\n&lt;%\n\n}%&gt;]]>\n<\/dsp>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<form \n\telementName=\"Form\"\n\n\tappLinkName = 'thisapp'\n\tlinkName = 'Chose_Menu'\n\tallowPublicAccess = 'true'\n\theightType = 'auto'\n\tsearchString = 'Reservation_Id1=${Reservation_Id1}'\n\turlType = 'none'\n\tzc_SuccMsg = 'Menu Selected Successful !'\n\tzc_Header = 'false'\n\/> \n<\/column>\n<\/row>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>"
		}
		page On_Reservation(string Table_Id)
		{
			displayname = "On Reservation"
			icon = "media-1-button-power"
			Content="<zml    \t\t\n\t\t\n\t\t\tbgColor='#d98d8d'\n\t\t\n\t\t\n\t\t\n>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<dsp id='html_snippet5' elementName=\"HTML Header Image\"\n bgColor=\"#FFFFFF\" \n>\n\t<![CDATA[htmlpage html_snippet5()\ncontent\n&lt;%{\n\t%&gt;\n&lt;div class=&quot;resvation-head-image-holder&quot;&gt;\n\t\t&lt;img style=&quot;width:17%&quot; class=&quot;head-image&quot;\tsrc=&quot;https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcTwZNoQursHfAif4cSv9CiF8fQTXMuHNj_I8g&amp;s&quot; alr=&quot;Sakthi logo&quot;&gt;\n\t\t&lt;img style=&quot;width:83%&quot; class=&quot;head-image&quot; src=&quot;https:\/\/images.adsttc.com\/media\/images\/54f7\/bf80\/e58e\/ce08\/b400\/022d\/large_jpg\/1.jpg?1425522552&quot; alr=&quot;Table Picture&quot;&gt;\n\t&lt;\/div&gt;\n\t\n\t&lt;style&gt;\n\t\t.resvation-head-image-holder{\n\t\t\theight: 18vh;\n\t\t\twidth:100%;\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: center;\n\t\t}\n\t\t.head-image{\n\t\t\theight:100%;\n\t\t}\n\t&lt;\/style&gt;\n&lt;%\n\n}%&gt;]]>\n<\/dsp>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"33%\"\n   \t>\n\t<dsp id='html_snippet6' elementName=\"HTML Left Portrait Image\"\n bgColor=\"#FFFFFF\" \n>\n\t<![CDATA[htmlpage html_snippet6()\ncontent\n&lt;%{\n\t%&gt;\n&lt;div class=&quot;resvation-left-image-holder&quot;&gt;\n\t\t&lt;img class=&quot;left-image&quot; src=&quot;https:\/\/c8.alamy.com\/comp\/2EPC0XK\/young-chef-checking-reservations-talking-by-phone-in-restaurant-wearing-uniform-and-kitchen-gown-2EPC0XK.jpg&quot; alr=&quot;Table Picture&quot;&gt;\n\t&lt;\/div&gt;\n\t\n\t&lt;style&gt;\n\t\t.resvation-left-image-holder{\n\t\t\theight: 70vh;\n\t\t\twidth:auto;\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: center;\n\t\t\toverflow: hidden; \n\t\t}\n\t\t.left-image{\n\t\t\theight:100%;\n\t\t\twidth:100%;\n\t\t\tobject-fit: cover; \n\t\t\tborder-radius:10px;\n\t\t}\n\t&lt;\/style&gt;\n&lt;%\n\n}%&gt;]]>\n<\/dsp>\n<\/column><column\n   \t\t width=\"67%\"\n   \t>\n\t<form \n\telementName=\"Form\"\n\n\tappLinkName = 'thisapp'\n\tlinkName = 'Reservation'\n\tallowPublicAccess = 'true'\n\theightType = 'auto'\n\tsearchString = 'Table_Id=${Table_Id}'\n\turlType = 'none'\n\tzc_SuccMsg = 'Payment '\n\tzc_Header = 'false'\n\/> \n<\/column>\n<\/row>\n<\/layout>\n<\/zml>"
			script
			{
				/* Write your script logic here. You can assign values to the page variables you've created in the previous tab. Enter 'input.' to list the created page variables. */
			}
		}
		page On_Payment(string Menu_Id1, string Reservation_Id1)
		{
			displayname = "On Payment"
			icon = "media-1-button-power"
			Content="<zml    \t\t\n\t\t\n\t\t\tbgColor='#d98d8d'\n\t\t\n\t\t\n\t\t\n>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"35%\"\n   \t>\n\t<dsp id='html_snippet9' elementName=\"HTML Payment Image\"\n bgColor=\"#FFFFFF\" \n>\n\t<![CDATA[htmlpage html_snippet9()\ncontent\n&lt;%{\n\t%&gt;\n&lt;div class=&quot;payment-imgage-holder&quot;&gt;\n\t&lt;img class=&quot;payment-imgage&quot; src=&quot;https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcTuLgnjz_0dl5TdyRlK6vqfNtJUuDxA7fzRaw&amp;s&quot; alt=&quot;payment Portrait&quot;&gt;\n&lt;\/div&gt;\n&lt;style&gt;\n \t.payment-imgage-holder {\n\t\theight: 90vh; \n\t\twidth: auto; \n\t\t display:flex;\n\t\t justify-content:center;\n\t\t align-items:center;\n\t}\n\t.payment-imgage {\n\t\theight: 70%;\n\t\twidth: 70%;\n\t\t border-radius:10px;\n\t}\n&lt;\/style&gt;\n&lt;%\n\n}%&gt;]]>\n<\/dsp>\n<\/column><column\n   \t\t width=\"65%\"\n   \t>\n\t<form \n\telementName=\"Form\"\n\n\tappLinkName = 'thisapp'\n\tlinkName = 'Payment'\n\theightType = 'auto'\n\tsearchString = 'Reservation_Id1=${Reservation_Id1}|Menu_Id1=${Menu_Id1}'\n\turlType = 'none'\n\tzc_Header = 'false'\n\/> \n<\/column>\n<\/row>\n<\/layout>\n<\/zml>"
		}
		page View_Bill
		{
			displayname = "View Bill"
			icon = "business-money-11"
			Content="<zml    \t\t\n\t\t\n\t\t\tbgColor='#d98d8d'\n\t\t\n\t\t\n\t\t\n>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<dsp id='html_snippet7' elementName=\"HTML View Bill\"\n bgColor=\"#D98D8D\" \n>\n\t<![CDATA[htmlpage html_snippet7()\ncontent\n&lt;%{\n\tall_payments = Payment[Payment_Id != &quot;&quot;];\n\tlast_payment = Payment[Added_Time == all_payments.maximum(Added_Time)];\n\treservation_id = last_payment.Reservation_Id1;\n\tpayment_id = last_payment.Payment_Id;\n\treservation = Reservation[Reservation_Id == reservation_id];\n\ttable_id = reservation.Table_Id;\n\tbooking_date = reservation.Reservation_Date_Time;\n\tnumber_of_guest = reservation.Number_of_Guests;\n\ttable = Table[Table_Id == table_id];\n\ttotal_amount = last_payment.Amount;\n\tuser_menu = Chose_Menu[Menu_Id == last_payment.Menu_Id1];\n\tmenu_list = user_menu.Select_Menu1;\n\t%&gt;\n&lt;div class=&quot;bill-container&quot;&gt;\n\n    &lt;div class=&quot;restaurant-name&quot;&gt;\n        SRI SAKTHI RESTAURANT\n    &lt;\/div&gt;\n\n    &lt;div class=&quot;bill-header&quot;&gt;\n        &lt;h2&gt;Restaurant Bill&lt;\/h2&gt;\n    &lt;\/div&gt;\n\n    &lt;div class=&quot;bill-details&quot;&gt;\n        &lt;p&gt;&lt;strong&gt;Reservation ID: &lt;\/strong&gt; &lt;%=reservation_id%&gt;&lt;\/p&gt;\n        &lt;p&gt;&lt;strong&gt;Payment ID: &lt;\/strong&gt; &lt;%=payment_id%&gt;&lt;\/p&gt;\n\t\t&lt;p&gt;&lt;strong&gt;A\/C or Non A\/C: &amp;nbsp;  &lt;\/strong&gt; &lt;%=table.AC_or_Non_AC%&gt;&lt;\/p&gt;\n\t\t&lt;p class=&quot;right-side-tag&quot; style=&quot;margin-top:0px&quot;&gt;&lt;strong &gt;Table ID: &lt;\/strong&gt; &lt;%=table_id%&gt;&lt;\/p&gt;\n\t\t&lt;p class=&quot;right-side-tag&quot;&gt;&lt;strong &gt;Booking Time: &lt;\/strong&gt; &lt;%=booking_date%&gt;&lt;\/p&gt;\n\t\t&lt;p class=&quot;right-side-tag&quot;&gt;&lt;strong &gt;Number of Guest: &lt;\/strong&gt; &lt;%=number_of_guest%&gt;&lt;\/p&gt;\n    &lt;\/div&gt;\n&lt;%\n\tall_menu_list = menu_list.toList(&quot;,&quot;);\n\tif(all_menu_list.size() &gt; 0)\n\t{\n\t\t%&gt;\n&lt;table class=&quot;bill-table&quot;&gt;\n        &lt;thead&gt;\n            &lt;tr&gt;\n                &lt;th&gt;Dish Name&lt;\/th&gt;\n                &lt;th&gt;Quantity&lt;\/th&gt;\n                &lt;th&gt;Price&lt;\/th&gt;\n            &lt;\/tr&gt;\n        &lt;\/thead&gt;\n        &lt;tbody&gt;\n&lt;%\n\t\tfor each  menu_id in all_menu_list\n\t\t{\n\t\t\tmenu = Menu[ID == menu_id];\n\t\t\t%&gt;\n&lt;tr&gt;\n         &lt;td&gt;&lt;%=menu.Name%&gt;&lt;\/td&gt;\n         &lt;td&gt;&lt;%=menu.Name%&gt;&lt;\/td&gt;\n         &lt;td class=&quot;right-align&quot;&gt;&lt;%=menu.Price%&gt;&lt;\/td&gt;\n     &lt;\/tr&gt;\n&lt;%\n\t\t}\n\t\t%&gt;\n&lt;\/tbody&gt;\n    &lt;\/table&gt;\n&lt;%\n\t}\n\t%&gt;\n&lt;p class=&quot;right-side-tag&quot;&gt;Total: &lt;%=total_amount%&gt;&lt;\/p&gt;\n&lt;p class=&quot;right-side-tag&quot; style=&quot;font-size: 6px; margin-top: -18px;&quot;&gt;*Include A\/C or Non A\/C Table Booking Fee&lt;\/p&gt;\n&lt;a href=&quot;#Page:Home&quot; class=&quot;ok-button&quot;&gt;Ok&lt;\/a&gt;\n&lt;\/div&gt;\n&lt;style&gt;\n\t.bill-container {\n            max-width: 600px;\n            margin: 0 auto;\n            background-color: white;\n            padding: 20px;\n            border: 1px solid #ddd;\n\t\t\tborder-radius: 10px;\n            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n        }\n        .restaurant-name {\n            text-align: center;\n            font-size: 24px;\n            font-weight: bold;\n            margin-bottom: 10px;\n            color: #333;\n        }\n        .bill-header {\n            text-align: center;\n            margin-bottom: 20px;\n        }\n        .bill-header h2 {\n            margin: 0;\n            color: #333;\n        }\n        .bill-details {\n            margin-bottom: 20px;\n        }\n        .bill-details p {\n            margin: 5px 0;\n            font-size: 14px;\n            color: #555;\n        }\n        .bill-table {\n            width: 100%;\n           border-collapse: collapse;\n        }\n        .bill-table th, .bill-table td {\n            padding: 10px;\n            text-align: left;\n            border: 1px solid #ddd;\n        }\n        .bill-table th {\n            background-color: #f2f2f2;\n        }\n        .bill-table .right-align {\n            text-align: right;\n        }\n        .right-side-tag {\n            text-align: right;\n            font-size: 18px;\n            font-weight: bold;\n            color: #333;\n        }\n\t\t.ok-button {\n\t\t\twidth:20%;\n  \t\t\tdisplay: inline-block;\n  \t\t\tpadding: 10px 20px;\n  \t\t\tbackground-color: #4CAF50; \/* Green background *\/\n  \t\t\tcolor: white; \/* White text *\/\n  \t\t\ttext-align: center;\n\t\t\tmargin-left:40%;\n  \t\t\tfont-size: 16px;\n  \t\t\tfont-weight: bold;\n  \t\t\tborder: none;\n  \t\t\tborder-radius: 5px;\n  \t\t\tcursor: pointer; \n  \t\t\tbox-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1); \n  \t\t\ttransition: background-color 0.3s ease; \/* Smooth hover transition *\/\n\t\t}\n\n\t\t.ok-button:hover {\n  \t\t\tbackground-color: #45a049;\n\t\t}\n\n\t.ok-button:active {\n  \t\tbackground-color: #3e8e41; \n  \t\tbox-shadow: 0px 2px 4px rgba(0, 0, 0, 0.2);\n  \t\ttransform: translateY(2px); \/* Move the button down slightly *\/\n\t}\n\n    &lt;\/style&gt;\n&lt;%\n\n}%&gt;]]>\n<\/dsp>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>"
		}
		page Admin_Page
		{
			displayname = "Admin Page"
			icon = "design-webpage"
			Content="<zml    \t\t\n\t\t\n\t\t\tbgColor='#d98d8d'\n\t\t\n\t\t\n\t\t\n>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"21%\"\n   \t>\n\t<panel elementName=\"Panel\"\n \n\t\n\ttitle = 'Booking Details'\n\t\n\t\ttitleSize = '24px'\n            boldTitle = 'true'\n\t\ttitleColor = '#FFFFFF'\n\t\ttitleFontFamily = 'arimo, sans-serif'\n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\tpadding = '5px'\n\n>\n\t<pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#333333'\n\tsize = '16px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'Today Booking'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginTop = '2px'\n\tcolor = '#FF4C2F'\n\tsize = '36px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\n\tdisplayType = 'actual'\n\tthousandsSeperator = 'LOCALE'\n\tdecimalSeperator = 'DOT'\n\tnumberScale = 'none'\n\n\n\t  \n\t\tcriteria = 'Added_Time is today'\n\t  value = 'thisapp.Payment.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column><column\n   \t\t width=\"20%\"\n   \t>\n\t<panel elementName=\"Panel 1\"\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\tpadding = '5px'\n\n>\n\t<pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#333333'\n\tsize = '16px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'Yesterday Booking'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginTop = '2px'\n\tcolor = '#FF4C2F'\n\tsize = '36px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\n\tdisplayType = 'actual'\n\tthousandsSeperator = 'LOCALE'\n\tdecimalSeperator = 'DOT'\n\tnumberScale = 'none'\n\n\n\t  \n\t\tcriteria = 'Added_Time is yesterday'\n\t  value = 'thisapp.Payment.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column><column\n   \t\t width=\"19%\"\n   \t>\n\t<panel elementName=\"Panel 1\"\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\tpadding = '5px'\n\n>\n\t<pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#333333'\n\tsize = '16px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'Last Week Booking'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginTop = '2px'\n\tcolor = '#FF4C2F'\n\tsize = '36px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\n\tdisplayType = 'actual'\n\tthousandsSeperator = 'LOCALE'\n\tdecimalSeperator = 'DOT'\n\tnumberScale = 'none'\n\n\n\t  \n\t\tcriteria = 'Added_Time in last week'\n\t  value = 'thisapp.Payment.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column><column\n   \t\t width=\"21%\"\n   \t>\n\t<panel elementName=\"Panel 1\"\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\tpadding = '5px'\n\n>\n\t<pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#333333'\n\tsize = '16px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'Last Month Booking'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginTop = '2px'\n\tcolor = '#FF4C2F'\n\tsize = '36px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\n\tdisplayType = 'actual'\n\tthousandsSeperator = 'LOCALE'\n\tdecimalSeperator = 'DOT'\n\tnumberScale = 'none'\n\n\n\t  \n\t\tcriteria = 'Added_Time in last month'\n\t  value = 'thisapp.Payment.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column><column\n   \t\t width=\"19%\"\n   \t>\n\t<panel elementName=\"Panel 1\"\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\tpadding = '5px'\n\n>\n\t<pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#333333'\n\tsize = '16px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'Total Booking'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginTop = '2px'\n\tcolor = '#FF4C2F'\n\tsize = '36px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\n\tdisplayType = 'actual'\n\tthousandsSeperator = 'LOCALE'\n\tdecimalSeperator = 'DOT'\n\tnumberScale = 'none'\n\n\n\t  \n\t  value = 'thisapp.Payment.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"50%\"\n   \t>\n\t<chart \n\telementName=\"Chart 1\"\n\n\t\n\ttitle = 'Table Count'\n\t\n\t\ttitleSize = '24px'\n            boldTitle = 'true'\n\t\ttitleColor = '#FFFFFF'\n\t\ttitleFontFamily = 'arimo, sans-serif'\n\ttype = 'Pie'\n\tbgColor = '#FFFFFF'\n\ttheme = 'theme2'\n\tlegendPos = 'right.center'\n\tappLinkName = 'thisapp'\n\tformLinkName = 'Table'\n\txfield = 'AC_or_Non_AC'\n\tyfields = 'count:AC_or_Non_AC'\n\/>\n\n<\/column><column\n   \t\t width=\"50%\"\n   \t>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<panel elementName=\"Panel 1\"\n \n\t\n\ttitle = 'Manage Table'\n\t\n\t\ttitleSize = '20px'\n            boldTitle = 'true'\n\t\ttitleColor = '#FFFFFF'\n\t\ttitleFontFamily = 'arimo, sans-serif'\n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<image  \n\t\tmarginRight = '7px' \n\n\tcolor = '#FFFFFF'\n\tbgColor = '#2A70E7'\n\twidth = '52px'\n\theight = '52px'\n\ttype = 'icon'\n\tvalue = 'furniture-table'\n\tsize = '24px'\n\tcornerRadius = '26px'\n\ticonType = 'outline'\n\/>\n<\/pc><pc \n\t\tpadding = '5px'\n\n\t\thAlign = 'left'\n>\n\t<pr \n\t>\n\t<pc \n\t\n\t\thAlign = 'left'\n>\n\t<text \n\n\tcolor = '#333333'\n\tsize = '16px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'Total Table'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n\t\thAlign = 'left'\n>\n\t<text \n\n\tmarginTop = '2px'\n\tcolor = '#2A70E7'\n\tsize = '36px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\n\tdisplayType = 'actual'\n\tthousandsSeperator = 'LOCALE'\n\tdecimalSeperator = 'DOT'\n\tnumberScale = 'none'\n\n\n\t  \n\t  value = 'thisapp.Table.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<panel elementName=\"Panel 1\"\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\tpadding = '5px'\n\n>\n\t<pr \n\t\t\twidth='fill'\n\t\theight='auto'\n>\n\t<pc \n\t\n\t\twidth = '100%'\n>\n\t<text \n\n\tcolor = '#444444'\n\tsize = '20px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'Do you want add Table ?'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t\t\twidth='fill'\n\t\theight='auto'\n>\n\t<pc \n\t\n\t\twidth = '100%'\n>\n\t<button \n\t\tmarginLeft = '0px'\n\tmarginRight = '0px' \n\tmarginBottom = '0px'\n\tmarginTop = '0px'\n\n    action = 'OpenForm'\n\t\tcomponentLinkName = 'Table'\n\t\ttarget = 'popup'\n\tcolor = '#FFFFFF'\n\tsize = '16px'\n\ttext ='Add Table'\n\t\ttype = 'flat'\n\t\tbgColor = '#0072F4'\n\t\tcornerRadius = '3px' \n\/>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<panel elementName=\"Panel 1\"\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\tpadding = '5px'\n\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#444444'\n\tsize = '15px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'Do you want Update Table ?'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<button \n\t\tmarginLeft = '0px'\n\tmarginRight = '0px' \n\tmarginBottom = '0px'\n\tmarginTop = '0px'\n\n    action = 'OpenReport'\n\t\tcomponentLinkName = 'All_Tables'\n\t\ttarget = 'popup'\n\t\tpopupWidth = '800px'\n\t  \tpopupHeight = '600px'\n\tcolor = '#FFFFFF'\n\tsize = '16px'\n\ttext ='Update Table'\n\t\ttype = 'rounded'\n\t\tbgColor = '#0072F4'\n\t\tcornerRadius = '45.5938px' \n\/>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<chart \n\telementName=\"Chart 2\"\n\n\t\n\ttitle = 'Table Booking Count'\n\t\n\t\ttitleSize = '16px'\n            boldTitle = 'true'\n\t\ttitleColor = '#FFFFFF'\n\ttype = 'Semi Donut'\n\txtitle = 'Table Id'\n\tytitle = 'Booking Count'\n\tbgColor = '#FFFFFF'\n\ttheme = 'theme1'\n\tlegendPos = 'center.top'\n\tappLinkName = 'thisapp'\n\tformLinkName = 'Reservation'\n\txfield = 'Table_Id'\n\tyfields = 'count:Table_Id'\n\/>\n\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"50%\"\n   \t>\n\t<panel elementName=\"Panel 2\"\n \n\t\n\ttitle = 'Customer'\n\t\n\t\ttitleSize = '24px'\n            boldTitle = 'true'\n\t\ttitleColor = '#FFFFFF'\n\t\ttitleFontFamily = 'arimo, sans-serif'\n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\tpadding = '5px'\n\n>\n\t<pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#333333'\n\tsize = '16px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'Total Customer'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginRight = '5px' \n\tmarginTop = '5px'\n\tcolor = '#FF0048'\n\tsize = '36px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\n\tdisplayType = 'actual'\n\tthousandsSeperator = 'LOCALE'\n\tdecimalSeperator = 'DOT'\n\tnumberScale = 'none'\n\n\n\t  \n\t  value = 'thisapp.Customer.ID.count'\n>\n<\/text>\n\n<\/pc><pc \n\t\n>\n\t<image  \n\t\tmarginTop = '5px'\n\n\tcolor = '#FFFFFF'\n\tbgColor = '#FF0048'\n\twidth = '40px'\n\theight = '40px'\n\ttype = 'icon'\n\tvalue = 'users-2-a-star'\n\tsize = '22px'\n\tcornerRadius = '20px'\n\ticonType = 'solid'\n\/>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column><column\n   \t\t width=\"50%\"\n   \t>\n\t<panel elementName=\"Panel 3\"\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\tpadding = '5px'\n\n\t\thAlign = 'right'\n>\n\t<pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#333333'\n\tsize = '16px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'Total Amount Recived'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginTop = '3px'\n\tcolor = '#00D9B1'\n\tsize = '36px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\n\tdisplayType = 'actual'\n\tdecimalPlaces = '2'\n\tthousandsSeperator = 'LOCALE'\n\tdecimalSeperator = 'DOT'\n\tnumberScale = 'none'\n\n\n\t  \n\t  value = 'thisapp.Payment.Amount.sum'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc><pc \n\t\n>\n\t<image  \n\t\tmarginLeft = '7px'\n\n\tcolor = '#FFFFFF'\n\tbgColor = '#00D9B1'\n\twidth = '52px'\n\theight = '52px'\n\ttype = 'icon'\n\tvalue = 'business-money-bag'\n\tsize = '32px'\n\tcornerRadius = '26px'\n\ticonType = 'outline'\n\/>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<chart \n\telementName=\"Chart\"\n\n\ttype = 'Column'\n\txtitle = 'Payment Method'\n\tytitle = 'Total Amount'\n\tbgColor = '#FFFFFF'\n\ttheme = 'theme2'\n\tlegendPos = 'center.top'\n\tappLinkName = 'thisapp'\n\tformLinkName = 'Payment'\n\txfield = 'Payment_Method'\n\tyfields = 'sum:Amount'\n\t\tDelugeCriteria = 'Added_Time in this month'\n\/>\n\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>"
		}
	}
	section Tables
	{
		icon = "furniture-table"
		form Table
		{
			success message = "Table Added Successfully"
			field alignment = left
			Add_Table
			(
				type = section
				displayname = "Add Table"
				visibility = true
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have unique Table_Id
			(
    			type = text
				displayname = "Table Id"
				maxchar = 50
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Seating_Capacity
			(
				type = number
				displayname = "Seating Capacity"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have AC_or_Non_AC
			(
				type = radiobuttons
				displayname = "AC or Non AC"
				maxchar = 100
				values = {"A/C","Non A/C"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Is_Selected
			(
    			type = text
				displayname = "Is Selected"
				initial value = "No"
				private = true
	 			row = 1
	 			column = 1   
				width = medium
			)
			Table_Booking_Date_Time
			(
    			type = datetime
				displayname = "Table Booking Date Time"
				initial value = "${zoho.currenttime}"
				timedisplayoptions = "hh:mm:ss"
				alloweddays = 0,1,2,3,4,5,6
				private = true
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "furniture-table"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		default list All_Tables
		{
			displayName = "All Tables"
			show all rows from Table    
			(
				Table_Id as "Table Id"
				Seating_Capacity as "Seating Capacity"
				AC_or_Non_AC as "AC or Non AC"
				Is_Selected as "Is Selected"
				Table_Booking_Date_Time as "Table Booking Date Time"
			)
			options
			(
				icon = "travel-world"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
						layout type = -1
						fields
						(
							Table_Id as "Table Id"
							Seating_Capacity as "Seating Capacity"
							AC_or_Non_AC as "AC or Non AC"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
					record
					(
						Edit   	   
						Duplicate   	   
						Delete   	   
    				)
    			)
    			action
    			(
					on click
					(
						View Record   	   
    				)
					on right click
					(
						Edit   	   
						Delete   	   
						Duplicate   	   
						View Record   	   
    				)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
						layout type = -2
						fields
						(
							Table_Id as "Table Id"
							Seating_Capacity as "Seating Capacity"
							AC_or_Non_AC as "AC or Non AC"
							Is_Selected as "Is Selected"
							Table_Booking_Date_Time as "Table Booking Date Time"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Customers
	{
		icon = "shopping-mobile-card"
		form Customer
		{
			success message = "Customer Added Successfully"
			field alignment = left
			New_Customer
			(
				type = section
				displayname = "New Customer"
				visibility = true
	 			row = 1
	 			column = 0   
				width = medium
			)
			Customer_Id
			(
    			type = text
				displayname = "Customer Id"
				private = true
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have unique Name
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have unique Email
			(
    			type = email
				maxchar = 80
	 			row = 1
	 			column = 1   
				width = medium
				personal data = true
			)
			Random_Number
			(
    			type = text
				displayname = "Random Number"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Enter_OTP
			(
    			type = text
				displayname = "Enter OTP"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Resend_OTP
			(
    			type = checkbox
				displayname = "Resend OTP"
				initial value = false
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Phone_Number1
			(
    			type = phonenumber
				displayname = "Phone Number"
	 			row = 1
	 			column = 1   
				width = medium
				personal data = true
			)
			Table_Id
			(
    			type = text
				private = true
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "business-business-contact-89"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		default list All_Customers
		{
			displayName = "All Customers"
			show all rows from Customer  [Added_User == zoho.loginuser]  
			(
				Customer_Id as "Customer Id"
				Email
				Phone_Number1 as "Phone Number"
				(
					displayformat = plainnumber 
					linktodial = enable
				)
				Table_Id
				Enter_OTP as "Enter OTP"
				Random_Number as "Random Number"
				Resend_OTP as "Resend OTP"
				Name
			)
			options
			(
				icon = "travel-world"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
						layout type = -1
						fields
						(
							Customer_Id as "Customer Id"
							Name
							Email
							Phone_Number1 as "Phone Number"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
					record
					(
						Edit   	   
						Duplicate   	   
						Delete   	   
    				)
    			)
    			action
    			(
					on click
					(
						View Record   	   
    				)
					on right click
					(
						Edit   	   
						Delete   	   
						Duplicate   	   
						View Record   	   
    				)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
						layout type = -2
						fields
						(
							Customer_Id as "Customer Id"
							Email
							Phone_Number1 as "Phone Number"
							Table_Id
							Enter_OTP as "Enter OTP"
							Random_Number as "Random Number"
							Resend_OTP as "Resend OTP"
							Name
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Reservations
	{
		icon = "travel-hotel-symbol"
		form Reservation
		{
			success message = "Reservation Added Successfully"
			field alignment = left
			Reservation
			(
				type = section
				visibility = true
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have unique Reservation_Id
			(
    			type = text
				displayname = "Reservation Id"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Table_Id
			(
    			type = text
				displayname = "Table Id"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Reservation_Date_Time
			(
    			type = datetime
				displayname = "Reservation Date Time"
				timedisplayoptions = "hh:mm:ss"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Number_of_Guests
			(
				type = number
				displayname = "Number of Guests"
				initial value = 1
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Select_Customer_Email
			(
				type = picklist	
				displayname = "Select Customer Email"
				values  = Customer[Added_User == zoho.loginuser].ID
    			displayformat = [Email]
				allow new entries
				[
					displayname = "Add New Customer"
				]
				advanced field search = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Do_You_Order_Food_Then_Click_It
			(
    			type = checkbox
				displayname = "Do You Order Food ?Then Click It !"
				initial value = false
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "travel-fire"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
			blueprint components
			{
				stages = {"manager ap","Stage2","Stage3"}
			}
		}
		default list All_Reservations
		{
			displayName = "All Reservations"
			show all rows from Reservation  [Added_User == zoho.loginuser]  
			(
				Reservation_Id as "Reservation Id"
				Table_Id as "Table Id"
				Reservation_Date_Time as "Reservation Date Time"
				Number_of_Guests as "Number of Guests"
				Select_Customer_Email as "Select Customer Email"
				Do_You_Order_Food_Then_Click_It as "Do You Order Food ?Then Click It !"
			)
			options
			(
				icon = "travel-world"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
						layout type = -1
						fields
						(
							Reservation_Id as "Reservation Id"
							Table_Id as "Table Id"
							Reservation_Date_Time as "Reservation Date Time"
							Number_of_Guests as "Number of Guests"
							Select_Customer_Email as "Select Customer Email"
							Do_You_Order_Food_Then_Click_It as "Do You Order Food ?Then Click It !"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
					record
					(
						Edit   	   
						Duplicate   	   
						Delete   	   
    				)
    			)
    			action
    			(
					on click
					(
						View Record   	   
    				)
					on right click
					(
						Edit   	   
						Delete   	   
						Duplicate   	   
						View Record   	   
    				)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
						layout type = -2
						fields
						(
							Reservation_Id as "Reservation Id"
							Table_Id as "Table Id"
							Reservation_Date_Time as "Reservation Date Time"
							Number_of_Guests as "Number of Guests"
							Select_Customer_Email as "Select Customer Email"
							Do_You_Order_Food_Then_Click_It as "Do You Order Food ?Then Click It !"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Payments
	{
		icon = "shopping-credit-card-in"
		form Payment
		{
			success message = "Payment Added Successfully"
			field alignment = left
			Payment
			(
				type = section
				visibility = true
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have unique Payment_Id
			(
    			type = text
				displayname = "Payment Id"
				maxchar = 50
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Reservation_Id1
			(
    			type = text
				displayname = "Reservation Id"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Menu_Id1
			(
    			type = text
				displayname = "Menu Id"
				private = true
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Amount
			(
				type = decimal
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Payment_Method
			(
				type = picklist
				displayname = "Payment Method"
				maxchar = 100
				values = {"GPay","Credit Card","Debit Card"}
				others option = true
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Pay
			(
    			type = checkbox
				initial value = false
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Payment_Date_Time
			(
    			type = datetime
				displayname = "Payment Date Time"
				timedisplayoptions = "hh:mm:ss"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Reservation_Status
			(
    			type = text
				displayname = "Reservation Status"
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "shopping-receipt"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		default list All_Payments
		{
			displayName = "All Payments"
			show all rows from Payment  [Added_User == zoho.loginuser]  
			(
				Payment_Id as "Payment Id"
				Reservation_Id1 as "Reservation Id"
				Amount
				Payment_Method as "Payment Method"
				Pay
				Payment_Date_Time as "Payment Date Time"
				Reservation_Status as "Reservation Status"
				Menu_Id1 as "Menu Id"
			)
			options
			(
				icon = "shopping-cash-register"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
						layout type = -1
						fields
						(
							Payment_Id as "Payment Id"
							Reservation_Id1 as "Reservation Id"
							Amount
							Payment_Method as "Payment Method"
							Pay
							Payment_Date_Time as "Payment Date Time"
							Reservation_Status as "Reservation Status"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
					record
					(
						Edit   	   
						Duplicate   	   
						Delete   	   
    				)
    			)
    			action
    			(
					on click
					(
						View Record   	   
    				)
					on right click
					(
						Edit   	   
						Delete   	   
						Duplicate   	   
						View Record   	   
    				)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
						layout type = -2
						fields
						(
							Payment_Id as "Payment Id"
							Reservation_Id1 as "Reservation Id"
							Amount
							Payment_Method as "Payment Method"
							Pay
							Payment_Date_Time as "Payment Date Time"
							Reservation_Status as "Reservation Status"
							Menu_Id1 as "Menu Id"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Book_Tables
	{
		displayname= "Book Tables"
		icon = "education-book-open"
		form Book_Table
		{
			displayname = "Book Table"
			success message = ""
			field alignment = left
			Book_Table
			(
				type = section
				displayname = "Book Table"
				visibility = true
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Number_of_Guests
			(
				type = number
				displayname = "Number of Guests"
				initial value = 1
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Select_Your_Date
			(
    			type = datetime
				displayname = "Select Your Date"
				timedisplayoptions = "hh:mm:ss"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "education-book-open"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		default list All_Book_Tables
		{
			displayName = "All Book Tables"
			show all rows from Book_Table  [Added_User == zoho.loginuser]  
			(
				Number_of_Guests as "Number of Guests"
				Select_Your_Date as "Select Your Date"
			)
			options
			(
				icon = "travel-world"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
						layout type = -1
						fields
						(
							Number_of_Guests as "Number of Guests"
							Select_Your_Date as "Select Your Date"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
					record
					(
						Edit   	   
						Duplicate   	   
						Delete   	   
    				)
    			)
    			action
    			(
					on click
					(
						View Record   	   
    				)
					on right click
					(
						Edit   	   
						Delete   	   
						Duplicate   	   
						View Record   	   
    				)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
						layout type = -2
						fields
						(
							Number_of_Guests as "Number of Guests"
							Select_Your_Date as "Select Your Date"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Menus
	{
		icon = "food-microwave"
		form Menu
		{
			success message = "Menu Added Successfully"
			field alignment = left
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have unique Name
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Quantity
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Price
			(
				type = decimal
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "food-microwave"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		default list All_Menus
		{
			displayName = "All Menus"
			show all rows from Menu    
			(
				Name
				Price
				Quantity
				ID
			)
			options
			(
				icon = "travel-world"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
						layout type = -1
						fields
						(
							Name
							Price
							Quantity
							ID
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
					record
					(
						Edit   	   
						Duplicate   	   
						Delete   	   
    				)
    			)
    			action
    			(
					on click
					(
						View Record   	   
    				)
					on right click
					(
						Edit   	   
						Delete   	   
						Duplicate   	   
						View Record   	   
    				)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
						layout type = -2
						fields
						(
							Name
							Price
							Quantity
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Menus1
	{
		displayname= "Menus"
		icon = "food-microwave"
		form Chose_Menu
		{
			displayname = "Select Menu"
			success message = "Menu Added Successfully"
			field alignment = left
			Select_Menu
			(
				type = section
				displayname = "Select Menu"
				visibility = true
	 			row = 1
	 			column = 0   
				width = medium
			)
			unique Reservation_Id1
			(
    			type = text
				displayname = "Reservation Id"
				private = true
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have unique Menu_Id
			(
    			type = text
				displayname = "Menu Id"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Select_Menu1
			(
				type = list	
				displayname = "Select Menu"
				values  = Menu.ID
    			displayformat = [Name + "  - " + Quantity + " - " + Price]
				sortorder = ascending
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "food-microwave"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		default list All_Menus1
		{
			displayName = "All Menus"
			show all rows from Chose_Menu  [Added_User == zoho.loginuser]  
			(
				Reservation_Id1 as "Reservation Id"
				Menu_Id as "Menu Id"
				Select_Menu1 as "Select Menu"
			)
			options
			(
				icon = "travel-world"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
						layout type = -1
						fields
						(
							Reservation_Id1 as "Reservation Id"
							Menu_Id as "Menu Id"
							Select_Menu1 as "Select Menu"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
					record
					(
						Edit   	   
						Duplicate   	   
						Delete   	   
    				)
    			)
    			action
    			(
					on click
					(
						View Record   	   
    				)
					on right click
					(
						Edit   	   
						Delete   	   
						Duplicate   	   
						View Record   	   
    				)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
						layout type = -2
						fields
						(
							Reservation_Id1 as "Reservation Id"
							Menu_Id as "Menu Id"
							Select_Menu1 as "Select Menu"
						)
					)
				)
				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}


		 functions
		 {
			 Deluge
			 {
				 string Get_Daily_Quotes()
                 {
                 	api = invokeurl
                 	[
                 		url :"https://api.api-ninjas.com/v1/quotes?category=happiness"
                 		type :GET
                 		headers:{"X-Api-Key":"YlG8tHHTndEaboSYvkrLvg==JK0BBpX6YK8IcFeo"}
                 	];
                 	return api.getJSON("quote");
                 }
				 string Get_OrgId()
                 {
                 	return "60034308179";
                 }
				 float Table_Fee(string ac_or_non_ac)
                 {
                 	if(ac_or_non_ac.endsWithIgnoreCase("A/C"))
                 	{
                 		return 150;
                 	}
                 	else
                 	{
                 		return 50;
                 	}
                 }
			 }
		 }




		workflow
		{
		form
		{
			Add_Customer_If_Not as "Add Customer If Not"
			{
				type =  form
				form = Customer
				record event = on add

				on validate
				{
					actions 
					{
						custom deluge script
						(
											response = zoho.books.getRecords("Contacts",thisapp.Get_OrgId(),"name=" + input.Name + "&email=" + input.Email,"zoho_books_connection");
										customer = response.get("contacts");
										alert customer;
										if(customer.isEmpty())
										{
											customer_name_map = Map();
											customer_name_map.put("contact_name",input.Name);
											customer_email_map = Map();
											customer_email_map.put("email",input.Email);
											new_customer_list = List();
											new_customer_list.add(customer_email_map);
											customer_name_map.put("contact_persons",new_customer_list);
											response1 = zoho.books.createRecord("Contacts",thisapp.Get_OrgId(),customer_name_map,"zoho_books_connection");
											alert response1;
											if(!response1.get("code").equalsIgnoreCase("0"))
											{
												alert "Name or Email is Exist!";
												cancel submit;
											}
										}
						)
					}
				}

			}
			Add_Menu_Zoho_Books as "Add Menu Zoho Books"
			{
				type =  form
				form = Menu
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											item_map = Map();
										item_map.put("name",input.Name);
										item_map.put("rate",input.Price);
										resp = zoho.books.createRecord("items",thisapp.Get_OrgId(),item_map,"zoho_books_connection");
										info resp;
						)
					}
				}

			}
			Create_Invoice_Zoho_Books as "Create Invoice Zoho Books"
			{
				type =  form
				form = Payment
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											reservation = Reservation[Reservation_Id == input.Reservation_Id1];
										customer = Customer[ID == reservation.Select_Customer_Email];
										user_menu = Chose_Menu[Menu_Id == input.Menu_Id1];
										menu_list = user_menu.Select_Menu1;
										ac_or_non_ac = Table[Table_Id == reservation.Table_Id].AC_or_Non_AC;
										order_list = List();
										for each  menu in menu_list
										{
											order_details = Map();
											order_details.put("name",menu.Name);
											order_details.put("quantity",toNumber(menu.Quantity));
											order_details.put("rate",menu.Price);
											order_list.add(order_details);
										}
										table_fee = Map();
										table_fee.put("name","Table Reservation fee");
										table_fee.put("rate",thisapp.Table_Fee(ac_or_non_ac));
										order_list.add(table_fee);
										contact_resp = zoho.books.getRecords("Contacts",thisapp.Get_OrgId(),"contact_name=" + customer.Name + "&email=" + customer.Email,"zoho_books_connection");
										value = Map();
										contact_list = contact_resp.get("contacts");
										contact = contact_list.get(0);
										value.put("customer_id",contact.get("contact_id"));
										value.put("line_items",order_list);
										Invoice = zoho.books.createRecord("Invoices",thisapp.Get_OrgId(),value,"zoho_books_connection");
										info Invoice;
						)
					}
				}

			}
			On_Create_Id as "On Create Id"
			{
				type =  form
				form = Customer
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											customer = Customer[Customer_Id != ""];
										if(customer.count(Customer_Id) > 0)
										{
											last_customer = Customer[Added_Time == customer.maximum(Added_Time)];
											id = last_customer.Customer_Id;
											alphabets = id.getAlpha();
											number = toNumber(id.getsuffix(alphabets));
											input.Customer_Id = alphabets + (number + 1).toString();
										}
										else
										{
											input.Customer_Id = "CID1";
										}
										disable Customer_Id;
										hide Table_Id;
						)
					}
				}

			}
			On_Call_Reservation as "On Call Reservation"
			{
				type =  form
				form = Customer
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											openUrl("#Form:Reservation?Customer_Email1=" + input.Email + "&Table_Id=" + input.Table_Id,"same window");
						)
					}
				}

			}
			On_Create_Table_Id_and_Di as "On Create Table Id and Disable Elements"
			{
				type =  form
				form = Table
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											table = Table[Table_Id != ""];
										if(table.count(Table_Id) > 0)
										{
											last_table = Table[Added_Time == table.maximum(Added_Time)];
											id = last_table.Table_Id;
											alphabets = id.getAlpha();
											number = toNumber(id.getsuffix(alphabets));
											input.Table_Id = alphabets + (number + 1).toString();
										}
										else
										{
											input.Table_Id = "TL1";
										}
										disable Table_Id;
										hide Is_Selected;
										hide Table_Booking_Date_Time;
						)
					}
				}

			}
			On_Create_Reservation_Id as "On Create Reservation Id"
			{
				type =  form
				form = Reservation
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											all_reservation = Reservation[Reservation_Id != ""];
										if(all_reservation.count(Reservation_Id) > 0)
										{
											last_reservation = Reservation[Added_Time == Reservation.maximum(Added_Time)];
											id = last_reservation.Reservation_Id;
											alphabets = id.getAlpha();
											number = toNumber(id.getsuffix(alphabets));
											input.Reservation_Id = alphabets + (number + 1).toString();
										}
										else
										{
											input.Reservation_Id = "RSID101";
										}
										hide Reservation_Id;
						)
					}
				}

			}
			Is_Exists_Table_Id_ as "Is Exists Table Id "
			{
				type =  form
				form = Reservation
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											if(Table_Id == null || Table_Id == "")
										{
											openUrl("#Page:Home","same window");
										}
										disable Table_Id;
						)
					}
				}

			}
			On_Call_Payment_or_Select as "On Call Payment or Select Menu"
			{
				type =  form
				form = Reservation
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											if(input.Do_You_Order_Food_Then_Click_It)
										{
											openUrl("#Page:Order_Food?Reservation_Id1=" + input.Reservation_Id,"same window");
										}
										else
										{
											openUrl("#Page:On_Payment?Reservation_Id1=" + input.Reservation_Id,"same window");
										}
						)
					}
				}

			}
			On_Create_Payment_Id1 as "On Create Payment Id"
			{
				type =  form
				form = Payment
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											customer = Customer[Customer_Id != ""];
										all_payment = Payment[Payment_Id != ""];
										if(all_payment.count(Payment_Id) > 0)
										{
											last_payment = Payment[Added_Time == Payment.maximum(Added_Time)];
											id = last_payment.Payment_Id;
											alphabets = id.getAlpha();
											number = toNumber(id.getsuffix(alphabets));
											input.Payment_Id = alphabets + (number + 1).toString();
										}
										else
										{
											input.Payment_Id = "PAYID101";
										}
										hide Payment_Id;
										disable Payment_Date_Time;
										disable Amount;
										disable Reservation_Status;
						)
					}
				}

			}
			Is_Exists_Reservation_ID1 as "Is Exists Reservation ID"
			{
				type =  form
				form = Payment
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											if(input.Reservation_Id1.isEmpty())
										{
											openUrl("#Form:Reservation?Reservation_Id=" + input.Reservation_Id1,"same window");
										}
										hide Reservation_Id1;
						)
					}
				}

			}
			Validate_Number_of_Guests as "Validate Number of Guests"
			{
				type =  form
				form = Book_Table
				record event = on add

				on user input of Number_of_Guests
				{
					actions 
					{
						custom deluge script
						(
											if(input.Number_of_Guests < 1)
										{
											input.Number_of_Guests = 1;
											alert "Enter Valid Number Of Guests";
										}
						)
					}
				}

			}
			Validate_Date as "Validate Date"
			{
				type =  form
				form = Book_Table
				record event = on add

				on user input of Select_Your_Date
				{
					actions 
					{
						custom deluge script
						(
											if(input.Select_Your_Date < zoho.currenttime.subMinutes(1))
										{
											input.Select_Your_Date = zoho.currenttime.addMinutes(1);
											alert "Select Today or Day After !";
										}
						)
					}
				}

			}
			On_Call_View_Table as "On Call View Table"
			{
				type =  form
				form = Book_Table
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											openUrl("#Page:Viwe_Table?Selected_Number_Guests=" + input.Number_of_Guests + "&Selected_Date_Time=" + input.Select_Your_Date,"same window");
						)
					}
				}

			}
			Is_Field_Customer_Email as "Is Field Customer Email"
			{
				type =  form
				form = Reservation
				record event = on add

				on user input of Select_Customer_Email
				{
					actions 
					{
						custom deluge script
						(
											if(Select_Customer_Email.Email == null || Select_Customer_Email.Email == "")
										{
											alert "Please Select Customer Email !";
										}
						)
					}
				}

			}
			Assign_Number_of_Guests_a as "Assign Number of Guests and Date"
			{
				type =  form
				form = Reservation
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											all_book_table = Book_Table[Number_of_Guests > 0];
										last_book_table = Book_Table[Added_Time == all_book_table.maximum(Added_Time)];
										if(last_book_table.Number_of_Guests <= 0 || last_book_table.Select_Your_Date == null || last_book_table.Select_Your_Date < zoho.currenttime.subMinutes(1))
										{
											alert "Please Select Table First !";
											openUrl("#Page:Home","same window");
										}
										else
										{
											input.Number_of_Guests = last_book_table.Number_of_Guests;
											input.Reservation_Date_Time = last_book_table.Select_Your_Date;
										}
										disable Number_of_Guests;
										disable Reservation_Date_Time;
						)
					}
				}

			}
			Hide_Reservation_Id as "Hide Reservation Id"
			{
				type =  form
				form = Chose_Menu
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											if(input.Reservation_Id1.isEmpty())
										{
											alert "Kindly Reservation First !";
											openUrl("#Page:On_Reservation","same window");
										}
										hide Reservation_Id1;
						)
					}
				}

			}
			On_Call_Payment as "On Call Payment"
			{
				type =  form
				form = Chose_Menu
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											openUrl("#Page:On_Payment?Reservation_Id1=" + input.Reservation_Id1 + "&Menu_Id1=" + input.Menu_Id,"same window");
						)
					}
				}

			}
			Calculate_Total_Amount as "Calculate Total Amount"
			{
				type =  form
				form = Payment
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											user_menu = Chose_Menu[Menu_Id == input.Menu_Id1];
										menu_list = user_menu.Select_Menu1;
										table_id = Reservation[Reservation_Id == input.Reservation_Id1].Table_Id;
										table = Table[Table_Id == table_id];
										amount = 0.0;
										if(table.AC_or_Non_AC == "A/C")
										{
											amount = 150;
										}
										else
										{
											amount = 50;
										}
										for each  menu_id in menu_list.toList(",")
										{
											amount = amount + Menu[ID == menu_id].Price;
										}
										input.Amount = amount;
						)
					}
				}

			}
			On_Create_Menu_Id as "On Create Menu Id"
			{
				type =  form
				form = Chose_Menu
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											menu = Chose_Menu[Menu_Id != ""];
										if(menu.count(Menu_Id) > 0)
										{
											last_menu = Chose_Menu[Added_Time == menu.maximum(Added_Time)];
											id = last_menu.Menu_Id;
											alphabets = id.getAlpha();
											number = toNumber(id.getsuffix(alphabets));
											input.Menu_Id = alphabets + (number + 1).toString();
										}
										else
										{
											input.Menu_Id = "MID1";
										}
										hide Menu_Id;
						)
					}
				}

			}
			Change_Reservation_Status as "Change Reservation Status and Add Date"
			{
				type =  form
				form = Payment
				record event = on add

				on user input of Pay
				{
					actions 
					{
						custom deluge script
						(
											if(input.Pay)
										{
											input.Payment_Date_Time = zoho.currenttime.toString("dd-MM-yyyy hh:mm:ss");
											input.Reservation_Status = "Booked";
											disable Pay;
										}
						)
					}
					actions 
					{
						custom deluge script
						(
											if(input.Pay)
										{
											input.Payment_Date_Time = zoho.currenttime.toString("dd-MM-yyyy hh:mm:ss");
											input.Reservation_Status = "Booked";
											disable Pay;
										}
						)
					}
				}

			}
			Hide_Menu_Id as "Hide Menu Id"
			{
				type =  form
				form = Payment
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											hide Menu_Id1;
						)
					}
				}

			}
			On_Call_Bill as "On Call Bill"
			{
				type =  form
				form = Payment
				record event = on add

				on success
				{
					actions 
					{
						custom deluge script
						(
											openUrl("#Page:View_Bill","popup window");
						)
					}
				}

			}
			Hide_Some_Elements as "Hide Some Elements"
			{
				type =  form
				form = Customer
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											hide Random_Number;
										hide Enter_OTP;
										hide Resend_OTP;
						)
					}
				}

			}
			OTP_Generate as "OTP Generate"
			{
				type =  form
				form = Customer
				record event = on add

				on user input of Email
				{
					actions 
					{
						custom deluge script
						(
											show Enter_OTP;
										show Resend_OTP;
										random_number = randomnumber(10000,99999);
										sendmail
										[
											from :zoho.adminuserid
											to :input.Email
											subject :"OTP Verification"
											message :"Your OTP is " + random_number
										]
										alert "OTP Send Sucessfully !";
										input.Random_Number = random_number;
						)
					}
				}

			}
			Resend_OTP as "Resend OTP"
			{
				type =  form
				form = Customer
				record event = on add

				on user input of Resend_OTP
				{
					actions 
					{
						custom deluge script
						(
											random_number = randomnumber(10000,99999);
										sendmail
										[
											from :zoho.adminuserid
											to :input.Email
											subject :"OTP Verification"
											message :"Your OTP is " + random_number
										]
										alert "OTP Send Sucessfully !";
										input.Random_Number = random_number;
						)
					}
				}

			}
			OTP_Validate as "OTP Validate"
			{
				type =  form
				form = Customer
				record event = on add

				on user input of Enter_OTP
				{
					actions 
					{
						custom deluge script
						(
											if(!input.Enter_OTP.isEmpty() && !input.Enter_OTP.equalsIgnoreCase("1OK"))
										{
											if(input.Enter_OTP.equalsIgnoreCase(input.Random_Number))
											{
												alert "Email OTP Verification Successfull !";
												input.Enter_OTP = "1OK";
												hide Enter_OTP;
												hide Resend_OTP;
											}
											else
											{
												input.Enter_OTP = null;
												alert "Invalid OTP";
											}
										}
						)
					}
				}

			}
			Is_Verified_Email as "Is Verified Email"
			{
				type =  form
				form = Customer
				record event = on add

				on validate
				{
					actions 
					{
						custom deluge script
						(
											if(!input.Enter_OTP.equalsIgnoreCase("1OK"))
										{
											cancel submit;
										}
						)
					}
				}

			}
			Is_ID_Exist as "Is ID Exist"
			{
				type =  form
				form = Reservation
				record event = on add

				on validate
				{
					actions 
					{
						custom deluge script
						(
											reservation_id = input.Reservation_Id;
										all_id = Reservation[Reservation_Id != ""];
										if(all_id.contains(reservation_id))
										{
											alphabets = reservation_id.getAlpha();
											number = toNumber(reservation_id.getsuffix(alphabets));
											input.Reservation_Id = alphabets + (number + 1).toString();
										}
						)
					}
				}

			}
			Payment_Id_Exist as "Payment Id Exist"
			{
				type =  form
				form = Payment
				record event = on add

				on validate
				{
					actions 
					{
						custom deluge script
						(
											payment_id = input.Payment_Id;
										all_id = Payment[Payment_Id != ""];
										if(all_id.contains(payment_id))
										{
											alphabets = payment_id.getAlpha();
											number = toNumber(payment_id.getsuffix(alphabets));
											input.Payment_Id = alphabets + (number + 1).toString();
										}
						)
					}
				}

			}
		}

		schedule
		{
			Clear_Booked_Table_on_Yes as "Clear Booked Table on Yesterday"
			{
				type =  schedule
					status = inactive
				start = "2024-10-10 00:00:00"
				frequency = daily
				time zone = "Asia/Kolkata"
				on start
				{
					actions 
					{
					delete from Book_Table[Added_User == zoho.loginuser && Select_Your_Date is yesterday];
					}
				}
			}
		}


		blueprint
		{
    			sample as "sample"
    			{
        			type = Blueprint
        			form = Reservation
        			status = inactive
        			start
        			{
        			}
        			stages
        			{
        			}
        			transitions
        			{
        			}
    			}
		}


		functions
		{
			On_Call_Reservation1 as "On Call Reservation"
			{
				type =  functions
				form = Customer
				execution type = for each record	
				on start
				{
					actions 
					{
					on click
					(
						openUrl("#Form:Reservation?Customer_Email1=" + input.Email + "&Table_Id=" + input.Table_Id,"same window");
					)
					}
				}
			}
		}
	}
	share_settings
	{
			"Read"
			{
				name = "Read"
				type = Users_Permissions
				permissions = {Chat:true, Predefined:true, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "This profile will have read permission for all components\n"
			}
			"Write"
			{
				name = "Write"
				type = Users_Permissions
				permissions = {Chat:true, Predefined:true, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "This profile will have write permission for all components\n"
			}
			"Administrator"
			{
				name = "Administrator"
				type = Users_Permissions
				permissions = {Chat:true, Predefined:true, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "This profile will have all the permissions.\n"
			}
			"Admin"
			{
				name = "Admin"
				type = Customer_Portal
				permissions = {Chat:false, Predefined:false, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "Admin can do CURD on Table and Menu\n\n"
				ModulePermissions
				{
					Reservation
					{
						allFieldsVisible= true 
					}
					Payment
					{
						allFieldsVisible= true 
					}
					Table
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Tables={"View","Edit","Delete"}
						}
					}
					Customer
					{
						allFieldsVisible= true 
					}
					Book_Table
					{
						allFieldsVisible= true 
					}
					Menu
					{
						enabled= Create,Viewall,Modifyall,Import,Export,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Menus={"View","Edit","Delete"}
						}
					}
					Chose_Menu
					{
						allFieldsVisible= true 
					}
					Admin_Page
					{
						enabled = tab
					}
				}
			}
			"Customer"
			{
				name = "Customer"
				type = Customer_Portal
				permissions = {Chat:false, Predefined:false, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "This is the default profile having only add and view permission.\n"
				ModulePermissions
				{
					Reservation
					{
						enabled= Create,Viewall,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Reservations={"View"}
						}
					}
					Payment
					{
						enabled= Create,Viewall,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Payments={"View"}
						}
					}
					Table
					{
						enabled= Viewall 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Tables={"View"}
						}
					}
					Customer
					{
						enabled= Create,Viewall,Modifyall,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Customers={"View","Edit","Delete"}
						}
					}
					Book_Table
					{
						enabled= Create,Viewall,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Book_Tables={"View"}
						}
					}
					Menu
					{
						enabled= Create,Viewall,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Menus={"View"}
						}
					}
					Chose_Menu
					{
						enabled= Create,Viewall,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Menus1={"View"}
						}
					}
					Home
					{
						enabled = tab
					}
					Viwe_Table
					{
						enabled = tab
					}
					Order_Food
					{
						enabled = tab
					}
					On_Reservation
					{
						enabled = tab
					}
					On_Payment
					{
						enabled = tab
					}
					View_Bill
					{
						enabled = tab
					}
				}
			}
			roles
			{
				"CEO"
				{
					description = "User belonging to this role can access data of all other users."
					"Admin"
					{
						description = ""
					}
				}
			}
	}

	customize
	{
		
		layout = "tab"
		color = "black"
		base theme = "professional"
		new theme = 11
		icons = true
		icons style = outline
		font = "lato"
		color options
    	{
        color = "1"
    	}
    	icon
    	{
        	type = "1"
        	name = "zc-ab-business-verticals1"
        	background color = "#d98d8d"
        	foreground color = "#1f2024"
    	}
    	logo
    	{
        	preference = "none"
        	placement = "left"
    	}
	}

	connections
	{
		zoho_books_connection
		(
			displayname = "Zoho Books Connection"
			connector = zoho_books
			permissions = {"create_bill","create_chart_of_account","create_contact","create_credit_note","create_estimate","create_expense","create_item","create_journal","create_purchase_order","create_recurring_bill","create_recurring_invoice","create_retainer_invoice","create_sales_invoice","create_sales_order","create_vendor","create_vendor_credit","fetch_chart_of_account","fetch_contact_by_email_or_name","fetch_credit_note_by_number","fetch_customer_payment","fetch_estimate","fetch_expense","fetch_invoice_by_number","fetch_item_by_name","fetch_journal","fetch_purchase_order","fetch_recurring_bill","fetch_recurring_expense","fetch_recurring_invoice","fetch_retainer_invoice_by_number","fetch_salesorder","fetch_vendor","fetch_vendor_credit","fetch_vendor_payment","record_payment","record_vendor_payment","update_bill","update_chart_of_account","update_contact","update_credit_note","update_estimate","update_expense","update_item","update_journal","update_purchase_order","update_recurring_bill","update_recurring_expense","update_recurring_invoice","update_retainer_invoice","update_sales_invoice","update_sales_order","update_vendor","update_vendor_credit"}
		)
	}

	phone
	{
		customize
		{
        	layout = slidingpane
		 	icons style = outline
        	font = "default"
            style = "3"
        	color options
        	{
             	color = yellow
         	}
         	logo
         	{
             	preference = "none"
         	}
		}
	}
	tablet
	{
		customize
		{
        	layout = slidingpane
		 	icons style = outline
        	font = "default"
            style = "3"
        	color options
        	{
             	color = yellow
         	}
         	logo
         	{
             	preference = "none"
         	}
		}
	}
	translation
{
{"Language_Settings":{"LANGAGUE_WITH_LOGIN":"en","USER_CHOICE_DEFAULT_LANGUAGE":"default"}}
}
}
